package net.minecraft.sounds;

import net.minecraft.resources.ResourceLocation;
import net.minecraft.core.Registry;

public class SoundEvents {
    public static final SoundEvent AMBIENT_CAVE;
    public static final SoundEvent AMBIENT_BASALT_DELTAS_ADDITIONS;
    public static final SoundEvent AMBIENT_BASALT_DELTAS_LOOP;
    public static final SoundEvent AMBIENT_BASALT_DELTAS_MOOD;
    public static final SoundEvent AMBIENT_CRIMSON_FOREST_ADDITIONS;
    public static final SoundEvent AMBIENT_CRIMSON_FOREST_LOOP;
    public static final SoundEvent AMBIENT_CRIMSON_FOREST_MOOD;
    public static final SoundEvent AMBIENT_NETHER_WASTES_ADDITIONS;
    public static final SoundEvent AMBIENT_NETHER_WASTES_LOOP;
    public static final SoundEvent AMBIENT_NETHER_WASTES_MOOD;
    public static final SoundEvent AMBIENT_SOUL_SAND_VALLEY_ADDITIONS;
    public static final SoundEvent AMBIENT_SOUL_SAND_VALLEY_LOOP;
    public static final SoundEvent AMBIENT_SOUL_SAND_VALLEY_MOOD;
    public static final SoundEvent AMBIENT_WARPED_FOREST_ADDITIONS;
    public static final SoundEvent AMBIENT_WARPED_FOREST_LOOP;
    public static final SoundEvent AMBIENT_WARPED_FOREST_MOOD;
    public static final SoundEvent AMBIENT_UNDERWATER_ENTER;
    public static final SoundEvent AMBIENT_UNDERWATER_EXIT;
    public static final SoundEvent AMBIENT_UNDERWATER_LOOP;
    public static final SoundEvent AMBIENT_UNDERWATER_LOOP_ADDITIONS;
    public static final SoundEvent AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE;
    public static final SoundEvent AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE;
    public static final SoundEvent ANCIENT_DEBRIS_BREAK;
    public static final SoundEvent ANCIENT_DEBRIS_STEP;
    public static final SoundEvent ANCIENT_DEBRIS_PLACE;
    public static final SoundEvent ANCIENT_DEBRIS_HIT;
    public static final SoundEvent ANCIENT_DEBRIS_FALL;
    public static final SoundEvent ANVIL_BREAK;
    public static final SoundEvent ANVIL_DESTROY;
    public static final SoundEvent ANVIL_FALL;
    public static final SoundEvent ANVIL_HIT;
    public static final SoundEvent ANVIL_LAND;
    public static final SoundEvent ANVIL_PLACE;
    public static final SoundEvent ANVIL_STEP;
    public static final SoundEvent ANVIL_USE;
    public static final SoundEvent ARMOR_EQUIP_CHAIN;
    public static final SoundEvent ARMOR_EQUIP_DIAMOND;
    public static final SoundEvent ARMOR_EQUIP_ELYTRA;
    public static final SoundEvent ARMOR_EQUIP_GENERIC;
    public static final SoundEvent ARMOR_EQUIP_GOLD;
    public static final SoundEvent ARMOR_EQUIP_IRON;
    public static final SoundEvent ARMOR_EQUIP_LEATHER;
    public static final SoundEvent ARMOR_EQUIP_NETHERITE;
    public static final SoundEvent ARMOR_EQUIP_TURTLE;
    public static final SoundEvent ARMOR_STAND_BREAK;
    public static final SoundEvent ARMOR_STAND_FALL;
    public static final SoundEvent ARMOR_STAND_HIT;
    public static final SoundEvent ARMOR_STAND_PLACE;
    public static final SoundEvent ARROW_HIT;
    public static final SoundEvent ARROW_HIT_PLAYER;
    public static final SoundEvent ARROW_SHOOT;
    public static final SoundEvent AXE_STRIP;
    public static final SoundEvent BAMBOO_BREAK;
    public static final SoundEvent BAMBOO_FALL;
    public static final SoundEvent BAMBOO_HIT;
    public static final SoundEvent BAMBOO_PLACE;
    public static final SoundEvent BAMBOO_STEP;
    public static final SoundEvent BAMBOO_SAPLING_BREAK;
    public static final SoundEvent BAMBOO_SAPLING_HIT;
    public static final SoundEvent BAMBOO_SAPLING_PLACE;
    public static final SoundEvent BARREL_CLOSE;
    public static final SoundEvent BARREL_OPEN;
    public static final SoundEvent BASALT_BREAK;
    public static final SoundEvent BASALT_STEP;
    public static final SoundEvent BASALT_PLACE;
    public static final SoundEvent BASALT_HIT;
    public static final SoundEvent BASALT_FALL;
    public static final SoundEvent BAT_AMBIENT;
    public static final SoundEvent BAT_DEATH;
    public static final SoundEvent BAT_HURT;
    public static final SoundEvent BAT_LOOP;
    public static final SoundEvent BAT_TAKEOFF;
    public static final SoundEvent BEACON_ACTIVATE;
    public static final SoundEvent BEACON_AMBIENT;
    public static final SoundEvent BEACON_DEACTIVATE;
    public static final SoundEvent BEACON_POWER_SELECT;
    public static final SoundEvent BEE_DEATH;
    public static final SoundEvent BEE_HURT;
    public static final SoundEvent BEE_LOOP_AGGRESSIVE;
    public static final SoundEvent BEE_LOOP;
    public static final SoundEvent BEE_STING;
    public static final SoundEvent BEE_POLLINATE;
    public static final SoundEvent BEEHIVE_DRIP;
    public static final SoundEvent BEEHIVE_ENTER;
    public static final SoundEvent BEEHIVE_EXIT;
    public static final SoundEvent BEEHIVE_SHEAR;
    public static final SoundEvent BEEHIVE_WORK;
    public static final SoundEvent BELL_BLOCK;
    public static final SoundEvent BELL_RESONATE;
    public static final SoundEvent BLAZE_AMBIENT;
    public static final SoundEvent BLAZE_BURN;
    public static final SoundEvent BLAZE_DEATH;
    public static final SoundEvent BLAZE_HURT;
    public static final SoundEvent BLAZE_SHOOT;
    public static final SoundEvent BOAT_PADDLE_LAND;
    public static final SoundEvent BOAT_PADDLE_WATER;
    public static final SoundEvent BONE_BLOCK_BREAK;
    public static final SoundEvent BONE_BLOCK_FALL;
    public static final SoundEvent BONE_BLOCK_HIT;
    public static final SoundEvent BONE_BLOCK_PLACE;
    public static final SoundEvent BONE_BLOCK_STEP;
    public static final SoundEvent BOOK_PAGE_TURN;
    public static final SoundEvent BOOK_PUT;
    public static final SoundEvent BLASTFURNACE_FIRE_CRACKLE;
    public static final SoundEvent BOTTLE_EMPTY;
    public static final SoundEvent BOTTLE_FILL;
    public static final SoundEvent BOTTLE_FILL_DRAGONBREATH;
    public static final SoundEvent BREWING_STAND_BREW;
    public static final SoundEvent BUBBLE_COLUMN_BUBBLE_POP;
    public static final SoundEvent BUBBLE_COLUMN_UPWARDS_AMBIENT;
    public static final SoundEvent BUBBLE_COLUMN_UPWARDS_INSIDE;
    public static final SoundEvent BUBBLE_COLUMN_WHIRLPOOL_AMBIENT;
    public static final SoundEvent BUBBLE_COLUMN_WHIRLPOOL_INSIDE;
    public static final SoundEvent BUCKET_EMPTY;
    public static final SoundEvent BUCKET_EMPTY_FISH;
    public static final SoundEvent BUCKET_EMPTY_LAVA;
    public static final SoundEvent BUCKET_FILL;
    public static final SoundEvent BUCKET_FILL_FISH;
    public static final SoundEvent BUCKET_FILL_LAVA;
    public static final SoundEvent CAMPFIRE_CRACKLE;
    public static final SoundEvent CAT_AMBIENT;
    public static final SoundEvent CAT_STRAY_AMBIENT;
    public static final SoundEvent CAT_DEATH;
    public static final SoundEvent CAT_EAT;
    public static final SoundEvent CAT_HISS;
    public static final SoundEvent CAT_BEG_FOR_FOOD;
    public static final SoundEvent CAT_HURT;
    public static final SoundEvent CAT_PURR;
    public static final SoundEvent CAT_PURREOW;
    public static final SoundEvent CHAIN_BREAK;
    public static final SoundEvent CHAIN_FALL;
    public static final SoundEvent CHAIN_HIT;
    public static final SoundEvent CHAIN_PLACE;
    public static final SoundEvent CHAIN_STEP;
    public static final SoundEvent CHEST_CLOSE;
    public static final SoundEvent CHEST_LOCKED;
    public static final SoundEvent CHEST_OPEN;
    public static final SoundEvent CHICKEN_AMBIENT;
    public static final SoundEvent CHICKEN_DEATH;
    public static final SoundEvent CHICKEN_EGG;
    public static final SoundEvent CHICKEN_HURT;
    public static final SoundEvent CHICKEN_STEP;
    public static final SoundEvent CHORUS_FLOWER_DEATH;
    public static final SoundEvent CHORUS_FLOWER_GROW;
    public static final SoundEvent CHORUS_FRUIT_TELEPORT;
    public static final SoundEvent COD_AMBIENT;
    public static final SoundEvent COD_DEATH;
    public static final SoundEvent COD_FLOP;
    public static final SoundEvent COD_HURT;
    public static final SoundEvent COMPARATOR_CLICK;
    public static final SoundEvent COMPOSTER_EMPTY;
    public static final SoundEvent COMPOSTER_FILL;
    public static final SoundEvent COMPOSTER_FILL_SUCCESS;
    public static final SoundEvent COMPOSTER_READY;
    public static final SoundEvent CONDUIT_ACTIVATE;
    public static final SoundEvent CONDUIT_AMBIENT;
    public static final SoundEvent CONDUIT_AMBIENT_SHORT;
    public static final SoundEvent CONDUIT_ATTACK_TARGET;
    public static final SoundEvent CONDUIT_DEACTIVATE;
    public static final SoundEvent CORAL_BLOCK_BREAK;
    public static final SoundEvent CORAL_BLOCK_FALL;
    public static final SoundEvent CORAL_BLOCK_HIT;
    public static final SoundEvent CORAL_BLOCK_PLACE;
    public static final SoundEvent CORAL_BLOCK_STEP;
    public static final SoundEvent COW_AMBIENT;
    public static final SoundEvent COW_DEATH;
    public static final SoundEvent COW_HURT;
    public static final SoundEvent COW_MILK;
    public static final SoundEvent COW_STEP;
    public static final SoundEvent CREEPER_DEATH;
    public static final SoundEvent CREEPER_HURT;
    public static final SoundEvent CREEPER_PRIMED;
    public static final SoundEvent CROP_BREAK;
    public static final SoundEvent CROP_PLANTED;
    public static final SoundEvent CROSSBOW_HIT;
    public static final SoundEvent CROSSBOW_LOADING_END;
    public static final SoundEvent CROSSBOW_LOADING_MIDDLE;
    public static final SoundEvent CROSSBOW_LOADING_START;
    public static final SoundEvent CROSSBOW_QUICK_CHARGE_1;
    public static final SoundEvent CROSSBOW_QUICK_CHARGE_2;
    public static final SoundEvent CROSSBOW_QUICK_CHARGE_3;
    public static final SoundEvent CROSSBOW_SHOOT;
    public static final SoundEvent DISPENSER_DISPENSE;
    public static final SoundEvent DISPENSER_FAIL;
    public static final SoundEvent DISPENSER_LAUNCH;
    public static final SoundEvent DOLPHIN_AMBIENT;
    public static final SoundEvent DOLPHIN_AMBIENT_WATER;
    public static final SoundEvent DOLPHIN_ATTACK;
    public static final SoundEvent DOLPHIN_DEATH;
    public static final SoundEvent DOLPHIN_EAT;
    public static final SoundEvent DOLPHIN_HURT;
    public static final SoundEvent DOLPHIN_JUMP;
    public static final SoundEvent DOLPHIN_PLAY;
    public static final SoundEvent DOLPHIN_SPLASH;
    public static final SoundEvent DOLPHIN_SWIM;
    public static final SoundEvent DONKEY_AMBIENT;
    public static final SoundEvent DONKEY_ANGRY;
    public static final SoundEvent DONKEY_CHEST;
    public static final SoundEvent DONKEY_DEATH;
    public static final SoundEvent DONKEY_EAT;
    public static final SoundEvent DONKEY_HURT;
    public static final SoundEvent DROWNED_AMBIENT;
    public static final SoundEvent DROWNED_AMBIENT_WATER;
    public static final SoundEvent DROWNED_DEATH;
    public static final SoundEvent DROWNED_DEATH_WATER;
    public static final SoundEvent DROWNED_HURT;
    public static final SoundEvent DROWNED_HURT_WATER;
    public static final SoundEvent DROWNED_SHOOT;
    public static final SoundEvent DROWNED_STEP;
    public static final SoundEvent DROWNED_SWIM;
    public static final SoundEvent EGG_THROW;
    public static final SoundEvent ELDER_GUARDIAN_AMBIENT;
    public static final SoundEvent ELDER_GUARDIAN_AMBIENT_LAND;
    public static final SoundEvent ELDER_GUARDIAN_CURSE;
    public static final SoundEvent ELDER_GUARDIAN_DEATH;
    public static final SoundEvent ELDER_GUARDIAN_DEATH_LAND;
    public static final SoundEvent ELDER_GUARDIAN_FLOP;
    public static final SoundEvent ELDER_GUARDIAN_HURT;
    public static final SoundEvent ELDER_GUARDIAN_HURT_LAND;
    public static final SoundEvent ELYTRA_FLYING;
    public static final SoundEvent ENCHANTMENT_TABLE_USE;
    public static final SoundEvent ENDER_CHEST_CLOSE;
    public static final SoundEvent ENDER_CHEST_OPEN;
    public static final SoundEvent ENDER_DRAGON_AMBIENT;
    public static final SoundEvent ENDER_DRAGON_DEATH;
    public static final SoundEvent DRAGON_FIREBALL_EXPLODE;
    public static final SoundEvent ENDER_DRAGON_FLAP;
    public static final SoundEvent ENDER_DRAGON_GROWL;
    public static final SoundEvent ENDER_DRAGON_HURT;
    public static final SoundEvent ENDER_DRAGON_SHOOT;
    public static final SoundEvent ENDER_EYE_DEATH;
    public static final SoundEvent ENDER_EYE_LAUNCH;
    public static final SoundEvent ENDERMAN_AMBIENT;
    public static final SoundEvent ENDERMAN_DEATH;
    public static final SoundEvent ENDERMAN_HURT;
    public static final SoundEvent ENDERMAN_SCREAM;
    public static final SoundEvent ENDERMAN_STARE;
    public static final SoundEvent ENDERMAN_TELEPORT;
    public static final SoundEvent ENDERMITE_AMBIENT;
    public static final SoundEvent ENDERMITE_DEATH;
    public static final SoundEvent ENDERMITE_HURT;
    public static final SoundEvent ENDERMITE_STEP;
    public static final SoundEvent ENDER_PEARL_THROW;
    public static final SoundEvent END_GATEWAY_SPAWN;
    public static final SoundEvent END_PORTAL_FRAME_FILL;
    public static final SoundEvent END_PORTAL_SPAWN;
    public static final SoundEvent EVOKER_AMBIENT;
    public static final SoundEvent EVOKER_CAST_SPELL;
    public static final SoundEvent EVOKER_CELEBRATE;
    public static final SoundEvent EVOKER_DEATH;
    public static final SoundEvent EVOKER_FANGS_ATTACK;
    public static final SoundEvent EVOKER_HURT;
    public static final SoundEvent EVOKER_PREPARE_ATTACK;
    public static final SoundEvent EVOKER_PREPARE_SUMMON;
    public static final SoundEvent EVOKER_PREPARE_WOLOLO;
    public static final SoundEvent EXPERIENCE_BOTTLE_THROW;
    public static final SoundEvent EXPERIENCE_ORB_PICKUP;
    public static final SoundEvent FENCE_GATE_CLOSE;
    public static final SoundEvent FENCE_GATE_OPEN;
    public static final SoundEvent FIRECHARGE_USE;
    public static final SoundEvent FIREWORK_ROCKET_BLAST;
    public static final SoundEvent FIREWORK_ROCKET_BLAST_FAR;
    public static final SoundEvent FIREWORK_ROCKET_LARGE_BLAST;
    public static final SoundEvent FIREWORK_ROCKET_LARGE_BLAST_FAR;
    public static final SoundEvent FIREWORK_ROCKET_LAUNCH;
    public static final SoundEvent FIREWORK_ROCKET_SHOOT;
    public static final SoundEvent FIREWORK_ROCKET_TWINKLE;
    public static final SoundEvent FIREWORK_ROCKET_TWINKLE_FAR;
    public static final SoundEvent FIRE_AMBIENT;
    public static final SoundEvent FIRE_EXTINGUISH;
    public static final SoundEvent FISH_SWIM;
    public static final SoundEvent FISHING_BOBBER_RETRIEVE;
    public static final SoundEvent FISHING_BOBBER_SPLASH;
    public static final SoundEvent FISHING_BOBBER_THROW;
    public static final SoundEvent FLINTANDSTEEL_USE;
    public static final SoundEvent FOX_AGGRO;
    public static final SoundEvent FOX_AMBIENT;
    public static final SoundEvent FOX_BITE;
    public static final SoundEvent FOX_DEATH;
    public static final SoundEvent FOX_EAT;
    public static final SoundEvent FOX_HURT;
    public static final SoundEvent FOX_SCREECH;
    public static final SoundEvent FOX_SLEEP;
    public static final SoundEvent FOX_SNIFF;
    public static final SoundEvent FOX_SPIT;
    public static final SoundEvent FOX_TELEPORT;
    public static final SoundEvent ROOTS_BREAK;
    public static final SoundEvent ROOTS_STEP;
    public static final SoundEvent ROOTS_PLACE;
    public static final SoundEvent ROOTS_HIT;
    public static final SoundEvent ROOTS_FALL;
    public static final SoundEvent FURNACE_FIRE_CRACKLE;
    public static final SoundEvent GENERIC_BIG_FALL;
    public static final SoundEvent GENERIC_BURN;
    public static final SoundEvent GENERIC_DEATH;
    public static final SoundEvent GENERIC_DRINK;
    public static final SoundEvent GENERIC_EAT;
    public static final SoundEvent GENERIC_EXPLODE;
    public static final SoundEvent GENERIC_EXTINGUISH_FIRE;
    public static final SoundEvent GENERIC_HURT;
    public static final SoundEvent GENERIC_SMALL_FALL;
    public static final SoundEvent GENERIC_SPLASH;
    public static final SoundEvent GENERIC_SWIM;
    public static final SoundEvent GHAST_AMBIENT;
    public static final SoundEvent GHAST_DEATH;
    public static final SoundEvent GHAST_HURT;
    public static final SoundEvent GHAST_SCREAM;
    public static final SoundEvent GHAST_SHOOT;
    public static final SoundEvent GHAST_WARN;
    public static final SoundEvent GILDED_BLACKSTONE_BREAK;
    public static final SoundEvent GILDED_BLACKSTONE_FALL;
    public static final SoundEvent GILDED_BLACKSTONE_HIT;
    public static final SoundEvent GILDED_BLACKSTONE_PLACE;
    public static final SoundEvent GILDED_BLACKSTONE_STEP;
    public static final SoundEvent GLASS_BREAK;
    public static final SoundEvent GLASS_FALL;
    public static final SoundEvent GLASS_HIT;
    public static final SoundEvent GLASS_PLACE;
    public static final SoundEvent GLASS_STEP;
    public static final SoundEvent GRASS_BREAK;
    public static final SoundEvent GRASS_FALL;
    public static final SoundEvent GRASS_HIT;
    public static final SoundEvent GRASS_PLACE;
    public static final SoundEvent GRASS_STEP;
    public static final SoundEvent GRAVEL_BREAK;
    public static final SoundEvent GRAVEL_FALL;
    public static final SoundEvent GRAVEL_HIT;
    public static final SoundEvent GRAVEL_PLACE;
    public static final SoundEvent GRAVEL_STEP;
    public static final SoundEvent GRINDSTONE_USE;
    public static final SoundEvent GUARDIAN_AMBIENT;
    public static final SoundEvent GUARDIAN_AMBIENT_LAND;
    public static final SoundEvent GUARDIAN_ATTACK;
    public static final SoundEvent GUARDIAN_DEATH;
    public static final SoundEvent GUARDIAN_DEATH_LAND;
    public static final SoundEvent GUARDIAN_FLOP;
    public static final SoundEvent GUARDIAN_HURT;
    public static final SoundEvent GUARDIAN_HURT_LAND;
    public static final SoundEvent HOE_TILL;
    public static final SoundEvent HOGLIN_AMBIENT;
    public static final SoundEvent HOGLIN_ANGRY;
    public static final SoundEvent HOGLIN_ATTACK;
    public static final SoundEvent HOGLIN_CONVERTED_TO_ZOMBIFIED;
    public static final SoundEvent HOGLIN_DEATH;
    public static final SoundEvent HOGLIN_HURT;
    public static final SoundEvent HOGLIN_RETREAT;
    public static final SoundEvent HOGLIN_STEP;
    public static final SoundEvent HONEY_BLOCK_BREAK;
    public static final SoundEvent HONEY_BLOCK_FALL;
    public static final SoundEvent HONEY_BLOCK_HIT;
    public static final SoundEvent HONEY_BLOCK_PLACE;
    public static final SoundEvent HONEY_BLOCK_SLIDE;
    public static final SoundEvent HONEY_BLOCK_STEP;
    public static final SoundEvent HONEY_DRINK;
    public static final SoundEvent HORSE_AMBIENT;
    public static final SoundEvent HORSE_ANGRY;
    public static final SoundEvent HORSE_ARMOR;
    public static final SoundEvent HORSE_BREATHE;
    public static final SoundEvent HORSE_DEATH;
    public static final SoundEvent HORSE_EAT;
    public static final SoundEvent HORSE_GALLOP;
    public static final SoundEvent HORSE_HURT;
    public static final SoundEvent HORSE_JUMP;
    public static final SoundEvent HORSE_LAND;
    public static final SoundEvent HORSE_SADDLE;
    public static final SoundEvent HORSE_STEP;
    public static final SoundEvent HORSE_STEP_WOOD;
    public static final SoundEvent HOSTILE_BIG_FALL;
    public static final SoundEvent HOSTILE_DEATH;
    public static final SoundEvent HOSTILE_HURT;
    public static final SoundEvent HOSTILE_SMALL_FALL;
    public static final SoundEvent HOSTILE_SPLASH;
    public static final SoundEvent HOSTILE_SWIM;
    public static final SoundEvent HUSK_AMBIENT;
    public static final SoundEvent HUSK_CONVERTED_TO_ZOMBIE;
    public static final SoundEvent HUSK_DEATH;
    public static final SoundEvent HUSK_HURT;
    public static final SoundEvent HUSK_STEP;
    public static final SoundEvent ILLUSIONER_AMBIENT;
    public static final SoundEvent ILLUSIONER_CAST_SPELL;
    public static final SoundEvent ILLUSIONER_DEATH;
    public static final SoundEvent ILLUSIONER_HURT;
    public static final SoundEvent ILLUSIONER_MIRROR_MOVE;
    public static final SoundEvent ILLUSIONER_PREPARE_BLINDNESS;
    public static final SoundEvent ILLUSIONER_PREPARE_MIRROR;
    public static final SoundEvent IRON_DOOR_CLOSE;
    public static final SoundEvent IRON_DOOR_OPEN;
    public static final SoundEvent IRON_GOLEM_ATTACK;
    public static final SoundEvent IRON_GOLEM_DAMAGE;
    public static final SoundEvent IRON_GOLEM_DEATH;
    public static final SoundEvent IRON_GOLEM_HURT;
    public static final SoundEvent IRON_GOLEM_REPAIR;
    public static final SoundEvent IRON_GOLEM_STEP;
    public static final SoundEvent IRON_TRAPDOOR_CLOSE;
    public static final SoundEvent IRON_TRAPDOOR_OPEN;
    public static final SoundEvent ITEM_FRAME_ADD_ITEM;
    public static final SoundEvent ITEM_FRAME_BREAK;
    public static final SoundEvent ITEM_FRAME_PLACE;
    public static final SoundEvent ITEM_FRAME_REMOVE_ITEM;
    public static final SoundEvent ITEM_FRAME_ROTATE_ITEM;
    public static final SoundEvent ITEM_BREAK;
    public static final SoundEvent ITEM_PICKUP;
    public static final SoundEvent LADDER_BREAK;
    public static final SoundEvent LADDER_FALL;
    public static final SoundEvent LADDER_HIT;
    public static final SoundEvent LADDER_PLACE;
    public static final SoundEvent LADDER_STEP;
    public static final SoundEvent LANTERN_BREAK;
    public static final SoundEvent LANTERN_FALL;
    public static final SoundEvent LANTERN_HIT;
    public static final SoundEvent LANTERN_PLACE;
    public static final SoundEvent LANTERN_STEP;
    public static final SoundEvent LAVA_AMBIENT;
    public static final SoundEvent LAVA_EXTINGUISH;
    public static final SoundEvent LAVA_POP;
    public static final SoundEvent LEASH_KNOT_BREAK;
    public static final SoundEvent LEASH_KNOT_PLACE;
    public static final SoundEvent LEVER_CLICK;
    public static final SoundEvent LIGHTNING_BOLT_IMPACT;
    public static final SoundEvent LIGHTNING_BOLT_THUNDER;
    public static final SoundEvent LINGERING_POTION_THROW;
    public static final SoundEvent LLAMA_AMBIENT;
    public static final SoundEvent LLAMA_ANGRY;
    public static final SoundEvent LLAMA_CHEST;
    public static final SoundEvent LLAMA_DEATH;
    public static final SoundEvent LLAMA_EAT;
    public static final SoundEvent LLAMA_HURT;
    public static final SoundEvent LLAMA_SPIT;
    public static final SoundEvent LLAMA_STEP;
    public static final SoundEvent LLAMA_SWAG;
    public static final SoundEvent MAGMA_CUBE_DEATH_SMALL;
    public static final SoundEvent LODESTONE_BREAK;
    public static final SoundEvent LODESTONE_STEP;
    public static final SoundEvent LODESTONE_PLACE;
    public static final SoundEvent LODESTONE_HIT;
    public static final SoundEvent LODESTONE_FALL;
    public static final SoundEvent LODESTONE_COMPASS_LOCK;
    public static final SoundEvent MAGMA_CUBE_DEATH;
    public static final SoundEvent MAGMA_CUBE_HURT;
    public static final SoundEvent MAGMA_CUBE_HURT_SMALL;
    public static final SoundEvent MAGMA_CUBE_JUMP;
    public static final SoundEvent MAGMA_CUBE_SQUISH;
    public static final SoundEvent MAGMA_CUBE_SQUISH_SMALL;
    public static final SoundEvent METAL_BREAK;
    public static final SoundEvent METAL_FALL;
    public static final SoundEvent METAL_HIT;
    public static final SoundEvent METAL_PLACE;
    public static final SoundEvent METAL_PRESSURE_PLATE_CLICK_OFF;
    public static final SoundEvent METAL_PRESSURE_PLATE_CLICK_ON;
    public static final SoundEvent METAL_STEP;
    public static final SoundEvent MINECART_INSIDE;
    public static final SoundEvent MINECART_RIDING;
    public static final SoundEvent MOOSHROOM_CONVERT;
    public static final SoundEvent MOOSHROOM_EAT;
    public static final SoundEvent MOOSHROOM_MILK;
    public static final SoundEvent MOOSHROOM_MILK_SUSPICIOUSLY;
    public static final SoundEvent MOOSHROOM_SHEAR;
    public static final SoundEvent MULE_AMBIENT;
    public static final SoundEvent MULE_ANGRY;
    public static final SoundEvent MULE_CHEST;
    public static final SoundEvent MULE_DEATH;
    public static final SoundEvent MULE_EAT;
    public static final SoundEvent MULE_HURT;
    public static final SoundEvent MUSIC_CREATIVE;
    public static final SoundEvent MUSIC_CREDITS;
    public static final SoundEvent MUSIC_DISC_11;
    public static final SoundEvent MUSIC_DISC_13;
    public static final SoundEvent MUSIC_DISC_BLOCKS;
    public static final SoundEvent MUSIC_DISC_CAT;
    public static final SoundEvent MUSIC_DISC_CHIRP;
    public static final SoundEvent MUSIC_DISC_FAR;
    public static final SoundEvent MUSIC_DISC_MALL;
    public static final SoundEvent MUSIC_DISC_MELLOHI;
    public static final SoundEvent MUSIC_DISC_PIGSTEP;
    public static final SoundEvent MUSIC_DISC_STAL;
    public static final SoundEvent MUSIC_DISC_STRAD;
    public static final SoundEvent MUSIC_DISC_WAIT;
    public static final SoundEvent MUSIC_DISC_WARD;
    public static final SoundEvent MUSIC_DRAGON;
    public static final SoundEvent MUSIC_END;
    public static final SoundEvent MUSIC_GAME;
    public static final SoundEvent MUSIC_MENU;
    public static final SoundEvent MUSIC_BIOME_BASALT_DELTAS;
    public static final SoundEvent MUSIC_BIOME_NETHER_WASTES;
    public static final SoundEvent MUSIC_BIOME_SOUL_SAND_VALLEY;
    public static final SoundEvent MUSIC_BIOME_CRIMSON_FOREST;
    public static final SoundEvent MUSIC_BIOME_WARPED_FOREST;
    public static final SoundEvent MUSIC_UNDER_WATER;
    public static final SoundEvent NETHER_BRICKS_BREAK;
    public static final SoundEvent NETHER_BRICKS_STEP;
    public static final SoundEvent NETHER_BRICKS_PLACE;
    public static final SoundEvent NETHER_BRICKS_HIT;
    public static final SoundEvent NETHER_BRICKS_FALL;
    public static final SoundEvent NETHER_WART_BREAK;
    public static final SoundEvent NETHER_WART_PLANTED;
    public static final SoundEvent STEM_BREAK;
    public static final SoundEvent STEM_STEP;
    public static final SoundEvent STEM_PLACE;
    public static final SoundEvent STEM_HIT;
    public static final SoundEvent STEM_FALL;
    public static final SoundEvent NYLIUM_BREAK;
    public static final SoundEvent NYLIUM_STEP;
    public static final SoundEvent NYLIUM_PLACE;
    public static final SoundEvent NYLIUM_HIT;
    public static final SoundEvent NYLIUM_FALL;
    public static final SoundEvent NETHER_SPROUTS_BREAK;
    public static final SoundEvent NETHER_SPROUTS_STEP;
    public static final SoundEvent NETHER_SPROUTS_PLACE;
    public static final SoundEvent NETHER_SPROUTS_HIT;
    public static final SoundEvent NETHER_SPROUTS_FALL;
    public static final SoundEvent FUNGUS_BREAK;
    public static final SoundEvent FUNGUS_STEP;
    public static final SoundEvent FUNGUS_PLACE;
    public static final SoundEvent FUNGUS_HIT;
    public static final SoundEvent FUNGUS_FALL;
    public static final SoundEvent WEEPING_VINES_BREAK;
    public static final SoundEvent WEEPING_VINES_STEP;
    public static final SoundEvent WEEPING_VINES_PLACE;
    public static final SoundEvent WEEPING_VINES_HIT;
    public static final SoundEvent WEEPING_VINES_FALL;
    public static final SoundEvent WART_BLOCK_BREAK;
    public static final SoundEvent WART_BLOCK_STEP;
    public static final SoundEvent WART_BLOCK_PLACE;
    public static final SoundEvent WART_BLOCK_HIT;
    public static final SoundEvent WART_BLOCK_FALL;
    public static final SoundEvent NETHERITE_BLOCK_BREAK;
    public static final SoundEvent NETHERITE_BLOCK_STEP;
    public static final SoundEvent NETHERITE_BLOCK_PLACE;
    public static final SoundEvent NETHERITE_BLOCK_HIT;
    public static final SoundEvent NETHERITE_BLOCK_FALL;
    public static final SoundEvent NETHERRACK_BREAK;
    public static final SoundEvent NETHERRACK_STEP;
    public static final SoundEvent NETHERRACK_PLACE;
    public static final SoundEvent NETHERRACK_HIT;
    public static final SoundEvent NETHERRACK_FALL;
    public static final SoundEvent NOTE_BLOCK_BASEDRUM;
    public static final SoundEvent NOTE_BLOCK_BASS;
    public static final SoundEvent NOTE_BLOCK_BELL;
    public static final SoundEvent NOTE_BLOCK_CHIME;
    public static final SoundEvent NOTE_BLOCK_FLUTE;
    public static final SoundEvent NOTE_BLOCK_GUITAR;
    public static final SoundEvent NOTE_BLOCK_HARP;
    public static final SoundEvent NOTE_BLOCK_HAT;
    public static final SoundEvent NOTE_BLOCK_PLING;
    public static final SoundEvent NOTE_BLOCK_SNARE;
    public static final SoundEvent NOTE_BLOCK_XYLOPHONE;
    public static final SoundEvent NOTE_BLOCK_IRON_XYLOPHONE;
    public static final SoundEvent NOTE_BLOCK_COW_BELL;
    public static final SoundEvent NOTE_BLOCK_DIDGERIDOO;
    public static final SoundEvent NOTE_BLOCK_BIT;
    public static final SoundEvent NOTE_BLOCK_BANJO;
    public static final SoundEvent OCELOT_HURT;
    public static final SoundEvent OCELOT_AMBIENT;
    public static final SoundEvent OCELOT_DEATH;
    public static final SoundEvent PAINTING_BREAK;
    public static final SoundEvent PAINTING_PLACE;
    public static final SoundEvent PANDA_PRE_SNEEZE;
    public static final SoundEvent PANDA_SNEEZE;
    public static final SoundEvent PANDA_AMBIENT;
    public static final SoundEvent PANDA_DEATH;
    public static final SoundEvent PANDA_EAT;
    public static final SoundEvent PANDA_STEP;
    public static final SoundEvent PANDA_CANT_BREED;
    public static final SoundEvent PANDA_AGGRESSIVE_AMBIENT;
    public static final SoundEvent PANDA_WORRIED_AMBIENT;
    public static final SoundEvent PANDA_HURT;
    public static final SoundEvent PANDA_BITE;
    public static final SoundEvent PARROT_AMBIENT;
    public static final SoundEvent PARROT_DEATH;
    public static final SoundEvent PARROT_EAT;
    public static final SoundEvent PARROT_FLY;
    public static final SoundEvent PARROT_HURT;
    public static final SoundEvent PARROT_IMITATE_BLAZE;
    public static final SoundEvent PARROT_IMITATE_CREEPER;
    public static final SoundEvent PARROT_IMITATE_DROWNED;
    public static final SoundEvent PARROT_IMITATE_ELDER_GUARDIAN;
    public static final SoundEvent PARROT_IMITATE_ENDER_DRAGON;
    public static final SoundEvent PARROT_IMITATE_ENDERMITE;
    public static final SoundEvent PARROT_IMITATE_EVOKER;
    public static final SoundEvent PARROT_IMITATE_GHAST;
    public static final SoundEvent PARROT_IMITATE_GUARDIAN;
    public static final SoundEvent PARROT_IMITATE_HOGLIN;
    public static final SoundEvent PARROT_IMITATE_HUSK;
    public static final SoundEvent PARROT_IMITATE_ILLUSIONER;
    public static final SoundEvent PARROT_IMITATE_MAGMA_CUBE;
    public static final SoundEvent PARROT_IMITATE_PHANTOM;
    public static final SoundEvent PARROT_IMITATE_PIGLIN;
    public static final SoundEvent PARROT_IMITATE_PIGLIN_BRUTE;
    public static final SoundEvent PARROT_IMITATE_PILLAGER;
    public static final SoundEvent PARROT_IMITATE_RAVAGER;
    public static final SoundEvent PARROT_IMITATE_SHULKER;
    public static final SoundEvent PARROT_IMITATE_SILVERFISH;
    public static final SoundEvent PARROT_IMITATE_SKELETON;
    public static final SoundEvent PARROT_IMITATE_SLIME;
    public static final SoundEvent PARROT_IMITATE_SPIDER;
    public static final SoundEvent PARROT_IMITATE_STRAY;
    public static final SoundEvent PARROT_IMITATE_VEX;
    public static final SoundEvent PARROT_IMITATE_VINDICATOR;
    public static final SoundEvent PARROT_IMITATE_WITCH;
    public static final SoundEvent PARROT_IMITATE_WITHER;
    public static final SoundEvent PARROT_IMITATE_WITHER_SKELETON;
    public static final SoundEvent PARROT_IMITATE_ZOGLIN;
    public static final SoundEvent PARROT_IMITATE_ZOMBIE;
    public static final SoundEvent PARROT_IMITATE_ZOMBIE_VILLAGER;
    public static final SoundEvent PARROT_STEP;
    public static final SoundEvent PHANTOM_AMBIENT;
    public static final SoundEvent PHANTOM_BITE;
    public static final SoundEvent PHANTOM_DEATH;
    public static final SoundEvent PHANTOM_FLAP;
    public static final SoundEvent PHANTOM_HURT;
    public static final SoundEvent PHANTOM_SWOOP;
    public static final SoundEvent PIG_AMBIENT;
    public static final SoundEvent PIG_DEATH;
    public static final SoundEvent PIG_HURT;
    public static final SoundEvent PIG_SADDLE;
    public static final SoundEvent PIG_STEP;
    public static final SoundEvent PIGLIN_ADMIRING_ITEM;
    public static final SoundEvent PIGLIN_AMBIENT;
    public static final SoundEvent PIGLIN_ANGRY;
    public static final SoundEvent PIGLIN_CELEBRATE;
    public static final SoundEvent PIGLIN_DEATH;
    public static final SoundEvent PIGLIN_JEALOUS;
    public static final SoundEvent PIGLIN_HURT;
    public static final SoundEvent PIGLIN_RETREAT;
    public static final SoundEvent PIGLIN_STEP;
    public static final SoundEvent PIGLIN_CONVERTED_TO_ZOMBIFIED;
    public static final SoundEvent PIGLIN_BRUTE_AMBIENT;
    public static final SoundEvent PIGLIN_BRUTE_ANGRY;
    public static final SoundEvent PIGLIN_BRUTE_DEATH;
    public static final SoundEvent PIGLIN_BRUTE_HURT;
    public static final SoundEvent PIGLIN_BRUTE_STEP;
    public static final SoundEvent PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED;
    public static final SoundEvent PILLAGER_AMBIENT;
    public static final SoundEvent PILLAGER_CELEBRATE;
    public static final SoundEvent PILLAGER_DEATH;
    public static final SoundEvent PILLAGER_HURT;
    public static final SoundEvent PISTON_CONTRACT;
    public static final SoundEvent PISTON_EXTEND;
    public static final SoundEvent PLAYER_ATTACK_CRIT;
    public static final SoundEvent PLAYER_ATTACK_KNOCKBACK;
    public static final SoundEvent PLAYER_ATTACK_NODAMAGE;
    public static final SoundEvent PLAYER_ATTACK_STRONG;
    public static final SoundEvent PLAYER_ATTACK_SWEEP;
    public static final SoundEvent PLAYER_ATTACK_WEAK;
    public static final SoundEvent PLAYER_BIG_FALL;
    public static final SoundEvent PLAYER_BREATH;
    public static final SoundEvent PLAYER_BURP;
    public static final SoundEvent PLAYER_DEATH;
    public static final SoundEvent PLAYER_HURT;
    public static final SoundEvent PLAYER_HURT_DROWN;
    public static final SoundEvent PLAYER_HURT_ON_FIRE;
    public static final SoundEvent PLAYER_HURT_SWEET_BERRY_BUSH;
    public static final SoundEvent PLAYER_LEVELUP;
    public static final SoundEvent PLAYER_SMALL_FALL;
    public static final SoundEvent PLAYER_SPLASH;
    public static final SoundEvent PLAYER_SPLASH_HIGH_SPEED;
    public static final SoundEvent PLAYER_SWIM;
    public static final SoundEvent POLAR_BEAR_AMBIENT;
    public static final SoundEvent POLAR_BEAR_AMBIENT_BABY;
    public static final SoundEvent POLAR_BEAR_DEATH;
    public static final SoundEvent POLAR_BEAR_HURT;
    public static final SoundEvent POLAR_BEAR_STEP;
    public static final SoundEvent POLAR_BEAR_WARNING;
    public static final SoundEvent PORTAL_AMBIENT;
    public static final SoundEvent PORTAL_TRAVEL;
    public static final SoundEvent PORTAL_TRIGGER;
    public static final SoundEvent PUFFER_FISH_AMBIENT;
    public static final SoundEvent PUFFER_FISH_BLOW_OUT;
    public static final SoundEvent PUFFER_FISH_BLOW_UP;
    public static final SoundEvent PUFFER_FISH_DEATH;
    public static final SoundEvent PUFFER_FISH_FLOP;
    public static final SoundEvent PUFFER_FISH_HURT;
    public static final SoundEvent PUFFER_FISH_STING;
    public static final SoundEvent PUMPKIN_CARVE;
    public static final SoundEvent RABBIT_AMBIENT;
    public static final SoundEvent RABBIT_ATTACK;
    public static final SoundEvent RABBIT_DEATH;
    public static final SoundEvent RABBIT_HURT;
    public static final SoundEvent RABBIT_JUMP;
    public static final SoundEvent RAID_HORN;
    public static final SoundEvent RAVAGER_AMBIENT;
    public static final SoundEvent RAVAGER_ATTACK;
    public static final SoundEvent RAVAGER_CELEBRATE;
    public static final SoundEvent RAVAGER_DEATH;
    public static final SoundEvent RAVAGER_HURT;
    public static final SoundEvent RAVAGER_STEP;
    public static final SoundEvent RAVAGER_STUNNED;
    public static final SoundEvent RAVAGER_ROAR;
    public static final SoundEvent NETHER_GOLD_ORE_BREAK;
    public static final SoundEvent NETHER_GOLD_ORE_FALL;
    public static final SoundEvent NETHER_GOLD_ORE_HIT;
    public static final SoundEvent NETHER_GOLD_ORE_PLACE;
    public static final SoundEvent NETHER_GOLD_ORE_STEP;
    public static final SoundEvent NETHER_ORE_BREAK;
    public static final SoundEvent NETHER_ORE_FALL;
    public static final SoundEvent NETHER_ORE_HIT;
    public static final SoundEvent NETHER_ORE_PLACE;
    public static final SoundEvent NETHER_ORE_STEP;
    public static final SoundEvent REDSTONE_TORCH_BURNOUT;
    public static final SoundEvent RESPAWN_ANCHOR_AMBIENT;
    public static final SoundEvent RESPAWN_ANCHOR_CHARGE;
    public static final SoundEvent RESPAWN_ANCHOR_DEPLETE;
    public static final SoundEvent RESPAWN_ANCHOR_SET_SPAWN;
    public static final SoundEvent SALMON_AMBIENT;
    public static final SoundEvent SALMON_DEATH;
    public static final SoundEvent SALMON_FLOP;
    public static final SoundEvent SALMON_HURT;
    public static final SoundEvent SAND_BREAK;
    public static final SoundEvent SAND_FALL;
    public static final SoundEvent SAND_HIT;
    public static final SoundEvent SAND_PLACE;
    public static final SoundEvent SAND_STEP;
    public static final SoundEvent SCAFFOLDING_BREAK;
    public static final SoundEvent SCAFFOLDING_FALL;
    public static final SoundEvent SCAFFOLDING_HIT;
    public static final SoundEvent SCAFFOLDING_PLACE;
    public static final SoundEvent SCAFFOLDING_STEP;
    public static final SoundEvent SHEEP_AMBIENT;
    public static final SoundEvent SHEEP_DEATH;
    public static final SoundEvent SHEEP_HURT;
    public static final SoundEvent SHEEP_SHEAR;
    public static final SoundEvent SHEEP_STEP;
    public static final SoundEvent SHIELD_BLOCK;
    public static final SoundEvent SHIELD_BREAK;
    public static final SoundEvent SHROOMLIGHT_BREAK;
    public static final SoundEvent SHROOMLIGHT_STEP;
    public static final SoundEvent SHROOMLIGHT_PLACE;
    public static final SoundEvent SHROOMLIGHT_HIT;
    public static final SoundEvent SHROOMLIGHT_FALL;
    public static final SoundEvent SHOVEL_FLATTEN;
    public static final SoundEvent SHULKER_AMBIENT;
    public static final SoundEvent SHULKER_BOX_CLOSE;
    public static final SoundEvent SHULKER_BOX_OPEN;
    public static final SoundEvent SHULKER_BULLET_HIT;
    public static final SoundEvent SHULKER_BULLET_HURT;
    public static final SoundEvent SHULKER_CLOSE;
    public static final SoundEvent SHULKER_DEATH;
    public static final SoundEvent SHULKER_HURT;
    public static final SoundEvent SHULKER_HURT_CLOSED;
    public static final SoundEvent SHULKER_OPEN;
    public static final SoundEvent SHULKER_SHOOT;
    public static final SoundEvent SHULKER_TELEPORT;
    public static final SoundEvent SILVERFISH_AMBIENT;
    public static final SoundEvent SILVERFISH_DEATH;
    public static final SoundEvent SILVERFISH_HURT;
    public static final SoundEvent SILVERFISH_STEP;
    public static final SoundEvent SKELETON_AMBIENT;
    public static final SoundEvent SKELETON_DEATH;
    public static final SoundEvent SKELETON_HORSE_AMBIENT;
    public static final SoundEvent SKELETON_HORSE_DEATH;
    public static final SoundEvent SKELETON_HORSE_HURT;
    public static final SoundEvent SKELETON_HORSE_SWIM;
    public static final SoundEvent SKELETON_HORSE_AMBIENT_WATER;
    public static final SoundEvent SKELETON_HORSE_GALLOP_WATER;
    public static final SoundEvent SKELETON_HORSE_JUMP_WATER;
    public static final SoundEvent SKELETON_HORSE_STEP_WATER;
    public static final SoundEvent SKELETON_HURT;
    public static final SoundEvent SKELETON_SHOOT;
    public static final SoundEvent SKELETON_STEP;
    public static final SoundEvent SLIME_ATTACK;
    public static final SoundEvent SLIME_DEATH;
    public static final SoundEvent SLIME_HURT;
    public static final SoundEvent SLIME_JUMP;
    public static final SoundEvent SLIME_SQUISH;
    public static final SoundEvent SLIME_BLOCK_BREAK;
    public static final SoundEvent SLIME_BLOCK_FALL;
    public static final SoundEvent SLIME_BLOCK_HIT;
    public static final SoundEvent SLIME_BLOCK_PLACE;
    public static final SoundEvent SLIME_BLOCK_STEP;
    public static final SoundEvent SOUL_SAND_BREAK;
    public static final SoundEvent SOUL_SAND_STEP;
    public static final SoundEvent SOUL_SAND_PLACE;
    public static final SoundEvent SOUL_SAND_HIT;
    public static final SoundEvent SOUL_SAND_FALL;
    public static final SoundEvent SOUL_SOIL_BREAK;
    public static final SoundEvent SOUL_SOIL_STEP;
    public static final SoundEvent SOUL_SOIL_PLACE;
    public static final SoundEvent SOUL_SOIL_HIT;
    public static final SoundEvent SOUL_SOIL_FALL;
    public static final SoundEvent SOUL_ESCAPE;
    public static final SoundEvent STRIDER_AMBIENT;
    public static final SoundEvent STRIDER_HAPPY;
    public static final SoundEvent STRIDER_RETREAT;
    public static final SoundEvent STRIDER_DEATH;
    public static final SoundEvent STRIDER_HURT;
    public static final SoundEvent STRIDER_STEP;
    public static final SoundEvent STRIDER_STEP_LAVA;
    public static final SoundEvent STRIDER_EAT;
    public static final SoundEvent STRIDER_SADDLE;
    public static final SoundEvent SLIME_DEATH_SMALL;
    public static final SoundEvent SLIME_HURT_SMALL;
    public static final SoundEvent SLIME_JUMP_SMALL;
    public static final SoundEvent SLIME_SQUISH_SMALL;
    public static final SoundEvent SMITHING_TABLE_USE;
    public static final SoundEvent SMOKER_SMOKE;
    public static final SoundEvent SNOWBALL_THROW;
    public static final SoundEvent SNOW_BREAK;
    public static final SoundEvent SNOW_FALL;
    public static final SoundEvent SNOW_GOLEM_AMBIENT;
    public static final SoundEvent SNOW_GOLEM_DEATH;
    public static final SoundEvent SNOW_GOLEM_HURT;
    public static final SoundEvent SNOW_GOLEM_SHOOT;
    public static final SoundEvent SNOW_GOLEM_SHEAR;
    public static final SoundEvent SNOW_HIT;
    public static final SoundEvent SNOW_PLACE;
    public static final SoundEvent SNOW_STEP;
    public static final SoundEvent SPIDER_AMBIENT;
    public static final SoundEvent SPIDER_DEATH;
    public static final SoundEvent SPIDER_HURT;
    public static final SoundEvent SPIDER_STEP;
    public static final SoundEvent SPLASH_POTION_BREAK;
    public static final SoundEvent SPLASH_POTION_THROW;
    public static final SoundEvent SQUID_AMBIENT;
    public static final SoundEvent SQUID_DEATH;
    public static final SoundEvent SQUID_HURT;
    public static final SoundEvent SQUID_SQUIRT;
    public static final SoundEvent STONE_BREAK;
    public static final SoundEvent STONE_BUTTON_CLICK_OFF;
    public static final SoundEvent STONE_BUTTON_CLICK_ON;
    public static final SoundEvent STONE_FALL;
    public static final SoundEvent STONE_HIT;
    public static final SoundEvent STONE_PLACE;
    public static final SoundEvent STONE_PRESSURE_PLATE_CLICK_OFF;
    public static final SoundEvent STONE_PRESSURE_PLATE_CLICK_ON;
    public static final SoundEvent STONE_STEP;
    public static final SoundEvent STRAY_AMBIENT;
    public static final SoundEvent STRAY_DEATH;
    public static final SoundEvent STRAY_HURT;
    public static final SoundEvent STRAY_STEP;
    public static final SoundEvent SWEET_BERRY_BUSH_BREAK;
    public static final SoundEvent SWEET_BERRY_BUSH_PLACE;
    public static final SoundEvent SWEET_BERRY_BUSH_PICK_BERRIES;
    public static final SoundEvent THORNS_HIT;
    public static final SoundEvent TNT_PRIMED;
    public static final SoundEvent TOTEM_USE;
    public static final SoundEvent TRIDENT_HIT;
    public static final SoundEvent TRIDENT_HIT_GROUND;
    public static final SoundEvent TRIDENT_RETURN;
    public static final SoundEvent TRIDENT_RIPTIDE_1;
    public static final SoundEvent TRIDENT_RIPTIDE_2;
    public static final SoundEvent TRIDENT_RIPTIDE_3;
    public static final SoundEvent TRIDENT_THROW;
    public static final SoundEvent TRIDENT_THUNDER;
    public static final SoundEvent TRIPWIRE_ATTACH;
    public static final SoundEvent TRIPWIRE_CLICK_OFF;
    public static final SoundEvent TRIPWIRE_CLICK_ON;
    public static final SoundEvent TRIPWIRE_DETACH;
    public static final SoundEvent TROPICAL_FISH_AMBIENT;
    public static final SoundEvent TROPICAL_FISH_DEATH;
    public static final SoundEvent TROPICAL_FISH_FLOP;
    public static final SoundEvent TROPICAL_FISH_HURT;
    public static final SoundEvent TURTLE_AMBIENT_LAND;
    public static final SoundEvent TURTLE_DEATH;
    public static final SoundEvent TURTLE_DEATH_BABY;
    public static final SoundEvent TURTLE_EGG_BREAK;
    public static final SoundEvent TURTLE_EGG_CRACK;
    public static final SoundEvent TURTLE_EGG_HATCH;
    public static final SoundEvent TURTLE_HURT;
    public static final SoundEvent TURTLE_HURT_BABY;
    public static final SoundEvent TURTLE_LAY_EGG;
    public static final SoundEvent TURTLE_SHAMBLE;
    public static final SoundEvent TURTLE_SHAMBLE_BABY;
    public static final SoundEvent TURTLE_SWIM;
    public static final SoundEvent UI_BUTTON_CLICK;
    public static final SoundEvent UI_LOOM_SELECT_PATTERN;
    public static final SoundEvent UI_LOOM_TAKE_RESULT;
    public static final SoundEvent UI_CARTOGRAPHY_TABLE_TAKE_RESULT;
    public static final SoundEvent UI_STONECUTTER_TAKE_RESULT;
    public static final SoundEvent UI_STONECUTTER_SELECT_RECIPE;
    public static final SoundEvent UI_TOAST_CHALLENGE_COMPLETE;
    public static final SoundEvent UI_TOAST_IN;
    public static final SoundEvent UI_TOAST_OUT;
    public static final SoundEvent VEX_AMBIENT;
    public static final SoundEvent VEX_CHARGE;
    public static final SoundEvent VEX_DEATH;
    public static final SoundEvent VEX_HURT;
    public static final SoundEvent VILLAGER_AMBIENT;
    public static final SoundEvent VILLAGER_CELEBRATE;
    public static final SoundEvent VILLAGER_DEATH;
    public static final SoundEvent VILLAGER_HURT;
    public static final SoundEvent VILLAGER_NO;
    public static final SoundEvent VILLAGER_TRADE;
    public static final SoundEvent VILLAGER_YES;
    public static final SoundEvent VILLAGER_WORK_ARMORER;
    public static final SoundEvent VILLAGER_WORK_BUTCHER;
    public static final SoundEvent VILLAGER_WORK_CARTOGRAPHER;
    public static final SoundEvent VILLAGER_WORK_CLERIC;
    public static final SoundEvent VILLAGER_WORK_FARMER;
    public static final SoundEvent VILLAGER_WORK_FISHERMAN;
    public static final SoundEvent VILLAGER_WORK_FLETCHER;
    public static final SoundEvent VILLAGER_WORK_LEATHERWORKER;
    public static final SoundEvent VILLAGER_WORK_LIBRARIAN;
    public static final SoundEvent VILLAGER_WORK_MASON;
    public static final SoundEvent VILLAGER_WORK_SHEPHERD;
    public static final SoundEvent VILLAGER_WORK_TOOLSMITH;
    public static final SoundEvent VILLAGER_WORK_WEAPONSMITH;
    public static final SoundEvent VINDICATOR_AMBIENT;
    public static final SoundEvent VINDICATOR_CELEBRATE;
    public static final SoundEvent VINDICATOR_DEATH;
    public static final SoundEvent VINDICATOR_HURT;
    public static final SoundEvent VINE_STEP;
    public static final SoundEvent LILY_PAD_PLACE;
    public static final SoundEvent WANDERING_TRADER_AMBIENT;
    public static final SoundEvent WANDERING_TRADER_DEATH;
    public static final SoundEvent WANDERING_TRADER_DISAPPEARED;
    public static final SoundEvent WANDERING_TRADER_DRINK_MILK;
    public static final SoundEvent WANDERING_TRADER_DRINK_POTION;
    public static final SoundEvent WANDERING_TRADER_HURT;
    public static final SoundEvent WANDERING_TRADER_NO;
    public static final SoundEvent WANDERING_TRADER_REAPPEARED;
    public static final SoundEvent WANDERING_TRADER_TRADE;
    public static final SoundEvent WANDERING_TRADER_YES;
    public static final SoundEvent WATER_AMBIENT;
    public static final SoundEvent WEATHER_RAIN;
    public static final SoundEvent WEATHER_RAIN_ABOVE;
    public static final SoundEvent WET_GRASS_BREAK;
    public static final SoundEvent WET_GRASS_FALL;
    public static final SoundEvent WET_GRASS_HIT;
    public static final SoundEvent WET_GRASS_PLACE;
    public static final SoundEvent WET_GRASS_STEP;
    public static final SoundEvent WITCH_AMBIENT;
    public static final SoundEvent WITCH_CELEBRATE;
    public static final SoundEvent WITCH_DEATH;
    public static final SoundEvent WITCH_DRINK;
    public static final SoundEvent WITCH_HURT;
    public static final SoundEvent WITCH_THROW;
    public static final SoundEvent WITHER_AMBIENT;
    public static final SoundEvent WITHER_BREAK_BLOCK;
    public static final SoundEvent WITHER_DEATH;
    public static final SoundEvent WITHER_HURT;
    public static final SoundEvent WITHER_SHOOT;
    public static final SoundEvent WITHER_SKELETON_AMBIENT;
    public static final SoundEvent WITHER_SKELETON_DEATH;
    public static final SoundEvent WITHER_SKELETON_HURT;
    public static final SoundEvent WITHER_SKELETON_STEP;
    public static final SoundEvent WITHER_SPAWN;
    public static final SoundEvent WOLF_AMBIENT;
    public static final SoundEvent WOLF_DEATH;
    public static final SoundEvent WOLF_GROWL;
    public static final SoundEvent WOLF_HOWL;
    public static final SoundEvent WOLF_HURT;
    public static final SoundEvent WOLF_PANT;
    public static final SoundEvent WOLF_SHAKE;
    public static final SoundEvent WOLF_STEP;
    public static final SoundEvent WOLF_WHINE;
    public static final SoundEvent WOODEN_DOOR_CLOSE;
    public static final SoundEvent WOODEN_DOOR_OPEN;
    public static final SoundEvent WOODEN_TRAPDOOR_CLOSE;
    public static final SoundEvent WOODEN_TRAPDOOR_OPEN;
    public static final SoundEvent WOOD_BREAK;
    public static final SoundEvent WOODEN_BUTTON_CLICK_OFF;
    public static final SoundEvent WOODEN_BUTTON_CLICK_ON;
    public static final SoundEvent WOOD_FALL;
    public static final SoundEvent WOOD_HIT;
    public static final SoundEvent WOOD_PLACE;
    public static final SoundEvent WOODEN_PRESSURE_PLATE_CLICK_OFF;
    public static final SoundEvent WOODEN_PRESSURE_PLATE_CLICK_ON;
    public static final SoundEvent WOOD_STEP;
    public static final SoundEvent WOOL_BREAK;
    public static final SoundEvent WOOL_FALL;
    public static final SoundEvent WOOL_HIT;
    public static final SoundEvent WOOL_PLACE;
    public static final SoundEvent WOOL_STEP;
    public static final SoundEvent ZOGLIN_AMBIENT;
    public static final SoundEvent ZOGLIN_ANGRY;
    public static final SoundEvent ZOGLIN_ATTACK;
    public static final SoundEvent ZOGLIN_DEATH;
    public static final SoundEvent ZOGLIN_HURT;
    public static final SoundEvent ZOGLIN_STEP;
    public static final SoundEvent ZOMBIE_AMBIENT;
    public static final SoundEvent ZOMBIE_ATTACK_WOODEN_DOOR;
    public static final SoundEvent ZOMBIE_ATTACK_IRON_DOOR;
    public static final SoundEvent ZOMBIE_BREAK_WOODEN_DOOR;
    public static final SoundEvent ZOMBIE_CONVERTED_TO_DROWNED;
    public static final SoundEvent ZOMBIE_DEATH;
    public static final SoundEvent ZOMBIE_DESTROY_EGG;
    public static final SoundEvent ZOMBIE_HORSE_AMBIENT;
    public static final SoundEvent ZOMBIE_HORSE_DEATH;
    public static final SoundEvent ZOMBIE_HORSE_HURT;
    public static final SoundEvent ZOMBIE_HURT;
    public static final SoundEvent ZOMBIE_INFECT;
    public static final SoundEvent ZOMBIFIED_PIGLIN_AMBIENT;
    public static final SoundEvent ZOMBIFIED_PIGLIN_ANGRY;
    public static final SoundEvent ZOMBIFIED_PIGLIN_DEATH;
    public static final SoundEvent ZOMBIFIED_PIGLIN_HURT;
    public static final SoundEvent ZOMBIE_STEP;
    public static final SoundEvent ZOMBIE_VILLAGER_AMBIENT;
    public static final SoundEvent ZOMBIE_VILLAGER_CONVERTED;
    public static final SoundEvent ZOMBIE_VILLAGER_CURE;
    public static final SoundEvent ZOMBIE_VILLAGER_DEATH;
    public static final SoundEvent ZOMBIE_VILLAGER_HURT;
    public static final SoundEvent ZOMBIE_VILLAGER_STEP;
    
    private static SoundEvent register(final String string) {
        return Registry.<SoundEvent>register(Registry.SOUND_EVENT, string, new SoundEvent(new ResourceLocation(string)));
    }
    
    static {
        AMBIENT_CAVE = register("ambient.cave");
        AMBIENT_BASALT_DELTAS_ADDITIONS = register("ambient.basalt_deltas.additions");
        AMBIENT_BASALT_DELTAS_LOOP = register("ambient.basalt_deltas.loop");
        AMBIENT_BASALT_DELTAS_MOOD = register("ambient.basalt_deltas.mood");
        AMBIENT_CRIMSON_FOREST_ADDITIONS = register("ambient.crimson_forest.additions");
        AMBIENT_CRIMSON_FOREST_LOOP = register("ambient.crimson_forest.loop");
        AMBIENT_CRIMSON_FOREST_MOOD = register("ambient.crimson_forest.mood");
        AMBIENT_NETHER_WASTES_ADDITIONS = register("ambient.nether_wastes.additions");
        AMBIENT_NETHER_WASTES_LOOP = register("ambient.nether_wastes.loop");
        AMBIENT_NETHER_WASTES_MOOD = register("ambient.nether_wastes.mood");
        AMBIENT_SOUL_SAND_VALLEY_ADDITIONS = register("ambient.soul_sand_valley.additions");
        AMBIENT_SOUL_SAND_VALLEY_LOOP = register("ambient.soul_sand_valley.loop");
        AMBIENT_SOUL_SAND_VALLEY_MOOD = register("ambient.soul_sand_valley.mood");
        AMBIENT_WARPED_FOREST_ADDITIONS = register("ambient.warped_forest.additions");
        AMBIENT_WARPED_FOREST_LOOP = register("ambient.warped_forest.loop");
        AMBIENT_WARPED_FOREST_MOOD = register("ambient.warped_forest.mood");
        AMBIENT_UNDERWATER_ENTER = register("ambient.underwater.enter");
        AMBIENT_UNDERWATER_EXIT = register("ambient.underwater.exit");
        AMBIENT_UNDERWATER_LOOP = register("ambient.underwater.loop");
        AMBIENT_UNDERWATER_LOOP_ADDITIONS = register("ambient.underwater.loop.additions");
        AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE = register("ambient.underwater.loop.additions.rare");
        AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE = register("ambient.underwater.loop.additions.ultra_rare");
        ANCIENT_DEBRIS_BREAK = register("block.ancient_debris.break");
        ANCIENT_DEBRIS_STEP = register("block.ancient_debris.step");
        ANCIENT_DEBRIS_PLACE = register("block.ancient_debris.place");
        ANCIENT_DEBRIS_HIT = register("block.ancient_debris.hit");
        ANCIENT_DEBRIS_FALL = register("block.ancient_debris.fall");
        ANVIL_BREAK = register("block.anvil.break");
        ANVIL_DESTROY = register("block.anvil.destroy");
        ANVIL_FALL = register("block.anvil.fall");
        ANVIL_HIT = register("block.anvil.hit");
        ANVIL_LAND = register("block.anvil.land");
        ANVIL_PLACE = register("block.anvil.place");
        ANVIL_STEP = register("block.anvil.step");
        ANVIL_USE = register("block.anvil.use");
        ARMOR_EQUIP_CHAIN = register("item.armor.equip_chain");
        ARMOR_EQUIP_DIAMOND = register("item.armor.equip_diamond");
        ARMOR_EQUIP_ELYTRA = register("item.armor.equip_elytra");
        ARMOR_EQUIP_GENERIC = register("item.armor.equip_generic");
        ARMOR_EQUIP_GOLD = register("item.armor.equip_gold");
        ARMOR_EQUIP_IRON = register("item.armor.equip_iron");
        ARMOR_EQUIP_LEATHER = register("item.armor.equip_leather");
        ARMOR_EQUIP_NETHERITE = register("item.armor.equip_netherite");
        ARMOR_EQUIP_TURTLE = register("item.armor.equip_turtle");
        ARMOR_STAND_BREAK = register("entity.armor_stand.break");
        ARMOR_STAND_FALL = register("entity.armor_stand.fall");
        ARMOR_STAND_HIT = register("entity.armor_stand.hit");
        ARMOR_STAND_PLACE = register("entity.armor_stand.place");
        ARROW_HIT = register("entity.arrow.hit");
        ARROW_HIT_PLAYER = register("entity.arrow.hit_player");
        ARROW_SHOOT = register("entity.arrow.shoot");
        AXE_STRIP = register("item.axe.strip");
        BAMBOO_BREAK = register("block.bamboo.break");
        BAMBOO_FALL = register("block.bamboo.fall");
        BAMBOO_HIT = register("block.bamboo.hit");
        BAMBOO_PLACE = register("block.bamboo.place");
        BAMBOO_STEP = register("block.bamboo.step");
        BAMBOO_SAPLING_BREAK = register("block.bamboo_sapling.break");
        BAMBOO_SAPLING_HIT = register("block.bamboo_sapling.hit");
        BAMBOO_SAPLING_PLACE = register("block.bamboo_sapling.place");
        BARREL_CLOSE = register("block.barrel.close");
        BARREL_OPEN = register("block.barrel.open");
        BASALT_BREAK = register("block.basalt.break");
        BASALT_STEP = register("block.basalt.step");
        BASALT_PLACE = register("block.basalt.place");
        BASALT_HIT = register("block.basalt.hit");
        BASALT_FALL = register("block.basalt.fall");
        BAT_AMBIENT = register("entity.bat.ambient");
        BAT_DEATH = register("entity.bat.death");
        BAT_HURT = register("entity.bat.hurt");
        BAT_LOOP = register("entity.bat.loop");
        BAT_TAKEOFF = register("entity.bat.takeoff");
        BEACON_ACTIVATE = register("block.beacon.activate");
        BEACON_AMBIENT = register("block.beacon.ambient");
        BEACON_DEACTIVATE = register("block.beacon.deactivate");
        BEACON_POWER_SELECT = register("block.beacon.power_select");
        BEE_DEATH = register("entity.bee.death");
        BEE_HURT = register("entity.bee.hurt");
        BEE_LOOP_AGGRESSIVE = register("entity.bee.loop_aggressive");
        BEE_LOOP = register("entity.bee.loop");
        BEE_STING = register("entity.bee.sting");
        BEE_POLLINATE = register("entity.bee.pollinate");
        BEEHIVE_DRIP = register("block.beehive.drip");
        BEEHIVE_ENTER = register("block.beehive.enter");
        BEEHIVE_EXIT = register("block.beehive.exit");
        BEEHIVE_SHEAR = register("block.beehive.shear");
        BEEHIVE_WORK = register("block.beehive.work");
        BELL_BLOCK = register("block.bell.use");
        BELL_RESONATE = register("block.bell.resonate");
        BLAZE_AMBIENT = register("entity.blaze.ambient");
        BLAZE_BURN = register("entity.blaze.burn");
        BLAZE_DEATH = register("entity.blaze.death");
        BLAZE_HURT = register("entity.blaze.hurt");
        BLAZE_SHOOT = register("entity.blaze.shoot");
        BOAT_PADDLE_LAND = register("entity.boat.paddle_land");
        BOAT_PADDLE_WATER = register("entity.boat.paddle_water");
        BONE_BLOCK_BREAK = register("block.bone_block.break");
        BONE_BLOCK_FALL = register("block.bone_block.fall");
        BONE_BLOCK_HIT = register("block.bone_block.hit");
        BONE_BLOCK_PLACE = register("block.bone_block.place");
        BONE_BLOCK_STEP = register("block.bone_block.step");
        BOOK_PAGE_TURN = register("item.book.page_turn");
        BOOK_PUT = register("item.book.put");
        BLASTFURNACE_FIRE_CRACKLE = register("block.blastfurnace.fire_crackle");
        BOTTLE_EMPTY = register("item.bottle.empty");
        BOTTLE_FILL = register("item.bottle.fill");
        BOTTLE_FILL_DRAGONBREATH = register("item.bottle.fill_dragonbreath");
        BREWING_STAND_BREW = register("block.brewing_stand.brew");
        BUBBLE_COLUMN_BUBBLE_POP = register("block.bubble_column.bubble_pop");
        BUBBLE_COLUMN_UPWARDS_AMBIENT = register("block.bubble_column.upwards_ambient");
        BUBBLE_COLUMN_UPWARDS_INSIDE = register("block.bubble_column.upwards_inside");
        BUBBLE_COLUMN_WHIRLPOOL_AMBIENT = register("block.bubble_column.whirlpool_ambient");
        BUBBLE_COLUMN_WHIRLPOOL_INSIDE = register("block.bubble_column.whirlpool_inside");
        BUCKET_EMPTY = register("item.bucket.empty");
        BUCKET_EMPTY_FISH = register("item.bucket.empty_fish");
        BUCKET_EMPTY_LAVA = register("item.bucket.empty_lava");
        BUCKET_FILL = register("item.bucket.fill");
        BUCKET_FILL_FISH = register("item.bucket.fill_fish");
        BUCKET_FILL_LAVA = register("item.bucket.fill_lava");
        CAMPFIRE_CRACKLE = register("block.campfire.crackle");
        CAT_AMBIENT = register("entity.cat.ambient");
        CAT_STRAY_AMBIENT = register("entity.cat.stray_ambient");
        CAT_DEATH = register("entity.cat.death");
        CAT_EAT = register("entity.cat.eat");
        CAT_HISS = register("entity.cat.hiss");
        CAT_BEG_FOR_FOOD = register("entity.cat.beg_for_food");
        CAT_HURT = register("entity.cat.hurt");
        CAT_PURR = register("entity.cat.purr");
        CAT_PURREOW = register("entity.cat.purreow");
        CHAIN_BREAK = register("block.chain.break");
        CHAIN_FALL = register("block.chain.fall");
        CHAIN_HIT = register("block.chain.hit");
        CHAIN_PLACE = register("block.chain.place");
        CHAIN_STEP = register("block.chain.step");
        CHEST_CLOSE = register("block.chest.close");
        CHEST_LOCKED = register("block.chest.locked");
        CHEST_OPEN = register("block.chest.open");
        CHICKEN_AMBIENT = register("entity.chicken.ambient");
        CHICKEN_DEATH = register("entity.chicken.death");
        CHICKEN_EGG = register("entity.chicken.egg");
        CHICKEN_HURT = register("entity.chicken.hurt");
        CHICKEN_STEP = register("entity.chicken.step");
        CHORUS_FLOWER_DEATH = register("block.chorus_flower.death");
        CHORUS_FLOWER_GROW = register("block.chorus_flower.grow");
        CHORUS_FRUIT_TELEPORT = register("item.chorus_fruit.teleport");
        COD_AMBIENT = register("entity.cod.ambient");
        COD_DEATH = register("entity.cod.death");
        COD_FLOP = register("entity.cod.flop");
        COD_HURT = register("entity.cod.hurt");
        COMPARATOR_CLICK = register("block.comparator.click");
        COMPOSTER_EMPTY = register("block.composter.empty");
        COMPOSTER_FILL = register("block.composter.fill");
        COMPOSTER_FILL_SUCCESS = register("block.composter.fill_success");
        COMPOSTER_READY = register("block.composter.ready");
        CONDUIT_ACTIVATE = register("block.conduit.activate");
        CONDUIT_AMBIENT = register("block.conduit.ambient");
        CONDUIT_AMBIENT_SHORT = register("block.conduit.ambient.short");
        CONDUIT_ATTACK_TARGET = register("block.conduit.attack.target");
        CONDUIT_DEACTIVATE = register("block.conduit.deactivate");
        CORAL_BLOCK_BREAK = register("block.coral_block.break");
        CORAL_BLOCK_FALL = register("block.coral_block.fall");
        CORAL_BLOCK_HIT = register("block.coral_block.hit");
        CORAL_BLOCK_PLACE = register("block.coral_block.place");
        CORAL_BLOCK_STEP = register("block.coral_block.step");
        COW_AMBIENT = register("entity.cow.ambient");
        COW_DEATH = register("entity.cow.death");
        COW_HURT = register("entity.cow.hurt");
        COW_MILK = register("entity.cow.milk");
        COW_STEP = register("entity.cow.step");
        CREEPER_DEATH = register("entity.creeper.death");
        CREEPER_HURT = register("entity.creeper.hurt");
        CREEPER_PRIMED = register("entity.creeper.primed");
        CROP_BREAK = register("block.crop.break");
        CROP_PLANTED = register("item.crop.plant");
        CROSSBOW_HIT = register("item.crossbow.hit");
        CROSSBOW_LOADING_END = register("item.crossbow.loading_end");
        CROSSBOW_LOADING_MIDDLE = register("item.crossbow.loading_middle");
        CROSSBOW_LOADING_START = register("item.crossbow.loading_start");
        CROSSBOW_QUICK_CHARGE_1 = register("item.crossbow.quick_charge_1");
        CROSSBOW_QUICK_CHARGE_2 = register("item.crossbow.quick_charge_2");
        CROSSBOW_QUICK_CHARGE_3 = register("item.crossbow.quick_charge_3");
        CROSSBOW_SHOOT = register("item.crossbow.shoot");
        DISPENSER_DISPENSE = register("block.dispenser.dispense");
        DISPENSER_FAIL = register("block.dispenser.fail");
        DISPENSER_LAUNCH = register("block.dispenser.launch");
        DOLPHIN_AMBIENT = register("entity.dolphin.ambient");
        DOLPHIN_AMBIENT_WATER = register("entity.dolphin.ambient_water");
        DOLPHIN_ATTACK = register("entity.dolphin.attack");
        DOLPHIN_DEATH = register("entity.dolphin.death");
        DOLPHIN_EAT = register("entity.dolphin.eat");
        DOLPHIN_HURT = register("entity.dolphin.hurt");
        DOLPHIN_JUMP = register("entity.dolphin.jump");
        DOLPHIN_PLAY = register("entity.dolphin.play");
        DOLPHIN_SPLASH = register("entity.dolphin.splash");
        DOLPHIN_SWIM = register("entity.dolphin.swim");
        DONKEY_AMBIENT = register("entity.donkey.ambient");
        DONKEY_ANGRY = register("entity.donkey.angry");
        DONKEY_CHEST = register("entity.donkey.chest");
        DONKEY_DEATH = register("entity.donkey.death");
        DONKEY_EAT = register("entity.donkey.eat");
        DONKEY_HURT = register("entity.donkey.hurt");
        DROWNED_AMBIENT = register("entity.drowned.ambient");
        DROWNED_AMBIENT_WATER = register("entity.drowned.ambient_water");
        DROWNED_DEATH = register("entity.drowned.death");
        DROWNED_DEATH_WATER = register("entity.drowned.death_water");
        DROWNED_HURT = register("entity.drowned.hurt");
        DROWNED_HURT_WATER = register("entity.drowned.hurt_water");
        DROWNED_SHOOT = register("entity.drowned.shoot");
        DROWNED_STEP = register("entity.drowned.step");
        DROWNED_SWIM = register("entity.drowned.swim");
        EGG_THROW = register("entity.egg.throw");
        ELDER_GUARDIAN_AMBIENT = register("entity.elder_guardian.ambient");
        ELDER_GUARDIAN_AMBIENT_LAND = register("entity.elder_guardian.ambient_land");
        ELDER_GUARDIAN_CURSE = register("entity.elder_guardian.curse");
        ELDER_GUARDIAN_DEATH = register("entity.elder_guardian.death");
        ELDER_GUARDIAN_DEATH_LAND = register("entity.elder_guardian.death_land");
        ELDER_GUARDIAN_FLOP = register("entity.elder_guardian.flop");
        ELDER_GUARDIAN_HURT = register("entity.elder_guardian.hurt");
        ELDER_GUARDIAN_HURT_LAND = register("entity.elder_guardian.hurt_land");
        ELYTRA_FLYING = register("item.elytra.flying");
        ENCHANTMENT_TABLE_USE = register("block.enchantment_table.use");
        ENDER_CHEST_CLOSE = register("block.ender_chest.close");
        ENDER_CHEST_OPEN = register("block.ender_chest.open");
        ENDER_DRAGON_AMBIENT = register("entity.ender_dragon.ambient");
        ENDER_DRAGON_DEATH = register("entity.ender_dragon.death");
        DRAGON_FIREBALL_EXPLODE = register("entity.dragon_fireball.explode");
        ENDER_DRAGON_FLAP = register("entity.ender_dragon.flap");
        ENDER_DRAGON_GROWL = register("entity.ender_dragon.growl");
        ENDER_DRAGON_HURT = register("entity.ender_dragon.hurt");
        ENDER_DRAGON_SHOOT = register("entity.ender_dragon.shoot");
        ENDER_EYE_DEATH = register("entity.ender_eye.death");
        ENDER_EYE_LAUNCH = register("entity.ender_eye.launch");
        ENDERMAN_AMBIENT = register("entity.enderman.ambient");
        ENDERMAN_DEATH = register("entity.enderman.death");
        ENDERMAN_HURT = register("entity.enderman.hurt");
        ENDERMAN_SCREAM = register("entity.enderman.scream");
        ENDERMAN_STARE = register("entity.enderman.stare");
        ENDERMAN_TELEPORT = register("entity.enderman.teleport");
        ENDERMITE_AMBIENT = register("entity.endermite.ambient");
        ENDERMITE_DEATH = register("entity.endermite.death");
        ENDERMITE_HURT = register("entity.endermite.hurt");
        ENDERMITE_STEP = register("entity.endermite.step");
        ENDER_PEARL_THROW = register("entity.ender_pearl.throw");
        END_GATEWAY_SPAWN = register("block.end_gateway.spawn");
        END_PORTAL_FRAME_FILL = register("block.end_portal_frame.fill");
        END_PORTAL_SPAWN = register("block.end_portal.spawn");
        EVOKER_AMBIENT = register("entity.evoker.ambient");
        EVOKER_CAST_SPELL = register("entity.evoker.cast_spell");
        EVOKER_CELEBRATE = register("entity.evoker.celebrate");
        EVOKER_DEATH = register("entity.evoker.death");
        EVOKER_FANGS_ATTACK = register("entity.evoker_fangs.attack");
        EVOKER_HURT = register("entity.evoker.hurt");
        EVOKER_PREPARE_ATTACK = register("entity.evoker.prepare_attack");
        EVOKER_PREPARE_SUMMON = register("entity.evoker.prepare_summon");
        EVOKER_PREPARE_WOLOLO = register("entity.evoker.prepare_wololo");
        EXPERIENCE_BOTTLE_THROW = register("entity.experience_bottle.throw");
        EXPERIENCE_ORB_PICKUP = register("entity.experience_orb.pickup");
        FENCE_GATE_CLOSE = register("block.fence_gate.close");
        FENCE_GATE_OPEN = register("block.fence_gate.open");
        FIRECHARGE_USE = register("item.firecharge.use");
        FIREWORK_ROCKET_BLAST = register("entity.firework_rocket.blast");
        FIREWORK_ROCKET_BLAST_FAR = register("entity.firework_rocket.blast_far");
        FIREWORK_ROCKET_LARGE_BLAST = register("entity.firework_rocket.large_blast");
        FIREWORK_ROCKET_LARGE_BLAST_FAR = register("entity.firework_rocket.large_blast_far");
        FIREWORK_ROCKET_LAUNCH = register("entity.firework_rocket.launch");
        FIREWORK_ROCKET_SHOOT = register("entity.firework_rocket.shoot");
        FIREWORK_ROCKET_TWINKLE = register("entity.firework_rocket.twinkle");
        FIREWORK_ROCKET_TWINKLE_FAR = register("entity.firework_rocket.twinkle_far");
        FIRE_AMBIENT = register("block.fire.ambient");
        FIRE_EXTINGUISH = register("block.fire.extinguish");
        FISH_SWIM = register("entity.fish.swim");
        FISHING_BOBBER_RETRIEVE = register("entity.fishing_bobber.retrieve");
        FISHING_BOBBER_SPLASH = register("entity.fishing_bobber.splash");
        FISHING_BOBBER_THROW = register("entity.fishing_bobber.throw");
        FLINTANDSTEEL_USE = register("item.flintandsteel.use");
        FOX_AGGRO = register("entity.fox.aggro");
        FOX_AMBIENT = register("entity.fox.ambient");
        FOX_BITE = register("entity.fox.bite");
        FOX_DEATH = register("entity.fox.death");
        FOX_EAT = register("entity.fox.eat");
        FOX_HURT = register("entity.fox.hurt");
        FOX_SCREECH = register("entity.fox.screech");
        FOX_SLEEP = register("entity.fox.sleep");
        FOX_SNIFF = register("entity.fox.sniff");
        FOX_SPIT = register("entity.fox.spit");
        FOX_TELEPORT = register("entity.fox.teleport");
        ROOTS_BREAK = register("block.roots.break");
        ROOTS_STEP = register("block.roots.step");
        ROOTS_PLACE = register("block.roots.place");
        ROOTS_HIT = register("block.roots.hit");
        ROOTS_FALL = register("block.roots.fall");
        FURNACE_FIRE_CRACKLE = register("block.furnace.fire_crackle");
        GENERIC_BIG_FALL = register("entity.generic.big_fall");
        GENERIC_BURN = register("entity.generic.burn");
        GENERIC_DEATH = register("entity.generic.death");
        GENERIC_DRINK = register("entity.generic.drink");
        GENERIC_EAT = register("entity.generic.eat");
        GENERIC_EXPLODE = register("entity.generic.explode");
        GENERIC_EXTINGUISH_FIRE = register("entity.generic.extinguish_fire");
        GENERIC_HURT = register("entity.generic.hurt");
        GENERIC_SMALL_FALL = register("entity.generic.small_fall");
        GENERIC_SPLASH = register("entity.generic.splash");
        GENERIC_SWIM = register("entity.generic.swim");
        GHAST_AMBIENT = register("entity.ghast.ambient");
        GHAST_DEATH = register("entity.ghast.death");
        GHAST_HURT = register("entity.ghast.hurt");
        GHAST_SCREAM = register("entity.ghast.scream");
        GHAST_SHOOT = register("entity.ghast.shoot");
        GHAST_WARN = register("entity.ghast.warn");
        GILDED_BLACKSTONE_BREAK = register("block.gilded_blackstone.break");
        GILDED_BLACKSTONE_FALL = register("block.gilded_blackstone.fall");
        GILDED_BLACKSTONE_HIT = register("block.gilded_blackstone.hit");
        GILDED_BLACKSTONE_PLACE = register("block.gilded_blackstone.place");
        GILDED_BLACKSTONE_STEP = register("block.gilded_blackstone.step");
        GLASS_BREAK = register("block.glass.break");
        GLASS_FALL = register("block.glass.fall");
        GLASS_HIT = register("block.glass.hit");
        GLASS_PLACE = register("block.glass.place");
        GLASS_STEP = register("block.glass.step");
        GRASS_BREAK = register("block.grass.break");
        GRASS_FALL = register("block.grass.fall");
        GRASS_HIT = register("block.grass.hit");
        GRASS_PLACE = register("block.grass.place");
        GRASS_STEP = register("block.grass.step");
        GRAVEL_BREAK = register("block.gravel.break");
        GRAVEL_FALL = register("block.gravel.fall");
        GRAVEL_HIT = register("block.gravel.hit");
        GRAVEL_PLACE = register("block.gravel.place");
        GRAVEL_STEP = register("block.gravel.step");
        GRINDSTONE_USE = register("block.grindstone.use");
        GUARDIAN_AMBIENT = register("entity.guardian.ambient");
        GUARDIAN_AMBIENT_LAND = register("entity.guardian.ambient_land");
        GUARDIAN_ATTACK = register("entity.guardian.attack");
        GUARDIAN_DEATH = register("entity.guardian.death");
        GUARDIAN_DEATH_LAND = register("entity.guardian.death_land");
        GUARDIAN_FLOP = register("entity.guardian.flop");
        GUARDIAN_HURT = register("entity.guardian.hurt");
        GUARDIAN_HURT_LAND = register("entity.guardian.hurt_land");
        HOE_TILL = register("item.hoe.till");
        HOGLIN_AMBIENT = register("entity.hoglin.ambient");
        HOGLIN_ANGRY = register("entity.hoglin.angry");
        HOGLIN_ATTACK = register("entity.hoglin.attack");
        HOGLIN_CONVERTED_TO_ZOMBIFIED = register("entity.hoglin.converted_to_zombified");
        HOGLIN_DEATH = register("entity.hoglin.death");
        HOGLIN_HURT = register("entity.hoglin.hurt");
        HOGLIN_RETREAT = register("entity.hoglin.retreat");
        HOGLIN_STEP = register("entity.hoglin.step");
        HONEY_BLOCK_BREAK = register("block.honey_block.break");
        HONEY_BLOCK_FALL = register("block.honey_block.fall");
        HONEY_BLOCK_HIT = register("block.honey_block.hit");
        HONEY_BLOCK_PLACE = register("block.honey_block.place");
        HONEY_BLOCK_SLIDE = register("block.honey_block.slide");
        HONEY_BLOCK_STEP = register("block.honey_block.step");
        HONEY_DRINK = register("item.honey_bottle.drink");
        HORSE_AMBIENT = register("entity.horse.ambient");
        HORSE_ANGRY = register("entity.horse.angry");
        HORSE_ARMOR = register("entity.horse.armor");
        HORSE_BREATHE = register("entity.horse.breathe");
        HORSE_DEATH = register("entity.horse.death");
        HORSE_EAT = register("entity.horse.eat");
        HORSE_GALLOP = register("entity.horse.gallop");
        HORSE_HURT = register("entity.horse.hurt");
        HORSE_JUMP = register("entity.horse.jump");
        HORSE_LAND = register("entity.horse.land");
        HORSE_SADDLE = register("entity.horse.saddle");
        HORSE_STEP = register("entity.horse.step");
        HORSE_STEP_WOOD = register("entity.horse.step_wood");
        HOSTILE_BIG_FALL = register("entity.hostile.big_fall");
        HOSTILE_DEATH = register("entity.hostile.death");
        HOSTILE_HURT = register("entity.hostile.hurt");
        HOSTILE_SMALL_FALL = register("entity.hostile.small_fall");
        HOSTILE_SPLASH = register("entity.hostile.splash");
        HOSTILE_SWIM = register("entity.hostile.swim");
        HUSK_AMBIENT = register("entity.husk.ambient");
        HUSK_CONVERTED_TO_ZOMBIE = register("entity.husk.converted_to_zombie");
        HUSK_DEATH = register("entity.husk.death");
        HUSK_HURT = register("entity.husk.hurt");
        HUSK_STEP = register("entity.husk.step");
        ILLUSIONER_AMBIENT = register("entity.illusioner.ambient");
        ILLUSIONER_CAST_SPELL = register("entity.illusioner.cast_spell");
        ILLUSIONER_DEATH = register("entity.illusioner.death");
        ILLUSIONER_HURT = register("entity.illusioner.hurt");
        ILLUSIONER_MIRROR_MOVE = register("entity.illusioner.mirror_move");
        ILLUSIONER_PREPARE_BLINDNESS = register("entity.illusioner.prepare_blindness");
        ILLUSIONER_PREPARE_MIRROR = register("entity.illusioner.prepare_mirror");
        IRON_DOOR_CLOSE = register("block.iron_door.close");
        IRON_DOOR_OPEN = register("block.iron_door.open");
        IRON_GOLEM_ATTACK = register("entity.iron_golem.attack");
        IRON_GOLEM_DAMAGE = register("entity.iron_golem.damage");
        IRON_GOLEM_DEATH = register("entity.iron_golem.death");
        IRON_GOLEM_HURT = register("entity.iron_golem.hurt");
        IRON_GOLEM_REPAIR = register("entity.iron_golem.repair");
        IRON_GOLEM_STEP = register("entity.iron_golem.step");
        IRON_TRAPDOOR_CLOSE = register("block.iron_trapdoor.close");
        IRON_TRAPDOOR_OPEN = register("block.iron_trapdoor.open");
        ITEM_FRAME_ADD_ITEM = register("entity.item_frame.add_item");
        ITEM_FRAME_BREAK = register("entity.item_frame.break");
        ITEM_FRAME_PLACE = register("entity.item_frame.place");
        ITEM_FRAME_REMOVE_ITEM = register("entity.item_frame.remove_item");
        ITEM_FRAME_ROTATE_ITEM = register("entity.item_frame.rotate_item");
        ITEM_BREAK = register("entity.item.break");
        ITEM_PICKUP = register("entity.item.pickup");
        LADDER_BREAK = register("block.ladder.break");
        LADDER_FALL = register("block.ladder.fall");
        LADDER_HIT = register("block.ladder.hit");
        LADDER_PLACE = register("block.ladder.place");
        LADDER_STEP = register("block.ladder.step");
        LANTERN_BREAK = register("block.lantern.break");
        LANTERN_FALL = register("block.lantern.fall");
        LANTERN_HIT = register("block.lantern.hit");
        LANTERN_PLACE = register("block.lantern.place");
        LANTERN_STEP = register("block.lantern.step");
        LAVA_AMBIENT = register("block.lava.ambient");
        LAVA_EXTINGUISH = register("block.lava.extinguish");
        LAVA_POP = register("block.lava.pop");
        LEASH_KNOT_BREAK = register("entity.leash_knot.break");
        LEASH_KNOT_PLACE = register("entity.leash_knot.place");
        LEVER_CLICK = register("block.lever.click");
        LIGHTNING_BOLT_IMPACT = register("entity.lightning_bolt.impact");
        LIGHTNING_BOLT_THUNDER = register("entity.lightning_bolt.thunder");
        LINGERING_POTION_THROW = register("entity.lingering_potion.throw");
        LLAMA_AMBIENT = register("entity.llama.ambient");
        LLAMA_ANGRY = register("entity.llama.angry");
        LLAMA_CHEST = register("entity.llama.chest");
        LLAMA_DEATH = register("entity.llama.death");
        LLAMA_EAT = register("entity.llama.eat");
        LLAMA_HURT = register("entity.llama.hurt");
        LLAMA_SPIT = register("entity.llama.spit");
        LLAMA_STEP = register("entity.llama.step");
        LLAMA_SWAG = register("entity.llama.swag");
        MAGMA_CUBE_DEATH_SMALL = register("entity.magma_cube.death_small");
        LODESTONE_BREAK = register("block.lodestone.break");
        LODESTONE_STEP = register("block.lodestone.step");
        LODESTONE_PLACE = register("block.lodestone.place");
        LODESTONE_HIT = register("block.lodestone.hit");
        LODESTONE_FALL = register("block.lodestone.fall");
        LODESTONE_COMPASS_LOCK = register("item.lodestone_compass.lock");
        MAGMA_CUBE_DEATH = register("entity.magma_cube.death");
        MAGMA_CUBE_HURT = register("entity.magma_cube.hurt");
        MAGMA_CUBE_HURT_SMALL = register("entity.magma_cube.hurt_small");
        MAGMA_CUBE_JUMP = register("entity.magma_cube.jump");
        MAGMA_CUBE_SQUISH = register("entity.magma_cube.squish");
        MAGMA_CUBE_SQUISH_SMALL = register("entity.magma_cube.squish_small");
        METAL_BREAK = register("block.metal.break");
        METAL_FALL = register("block.metal.fall");
        METAL_HIT = register("block.metal.hit");
        METAL_PLACE = register("block.metal.place");
        METAL_PRESSURE_PLATE_CLICK_OFF = register("block.metal_pressure_plate.click_off");
        METAL_PRESSURE_PLATE_CLICK_ON = register("block.metal_pressure_plate.click_on");
        METAL_STEP = register("block.metal.step");
        MINECART_INSIDE = register("entity.minecart.inside");
        MINECART_RIDING = register("entity.minecart.riding");
        MOOSHROOM_CONVERT = register("entity.mooshroom.convert");
        MOOSHROOM_EAT = register("entity.mooshroom.eat");
        MOOSHROOM_MILK = register("entity.mooshroom.milk");
        MOOSHROOM_MILK_SUSPICIOUSLY = register("entity.mooshroom.suspicious_milk");
        MOOSHROOM_SHEAR = register("entity.mooshroom.shear");
        MULE_AMBIENT = register("entity.mule.ambient");
        MULE_ANGRY = register("entity.mule.angry");
        MULE_CHEST = register("entity.mule.chest");
        MULE_DEATH = register("entity.mule.death");
        MULE_EAT = register("entity.mule.eat");
        MULE_HURT = register("entity.mule.hurt");
        MUSIC_CREATIVE = register("music.creative");
        MUSIC_CREDITS = register("music.credits");
        MUSIC_DISC_11 = register("music_disc.11");
        MUSIC_DISC_13 = register("music_disc.13");
        MUSIC_DISC_BLOCKS = register("music_disc.blocks");
        MUSIC_DISC_CAT = register("music_disc.cat");
        MUSIC_DISC_CHIRP = register("music_disc.chirp");
        MUSIC_DISC_FAR = register("music_disc.far");
        MUSIC_DISC_MALL = register("music_disc.mall");
        MUSIC_DISC_MELLOHI = register("music_disc.mellohi");
        MUSIC_DISC_PIGSTEP = register("music_disc.pigstep");
        MUSIC_DISC_STAL = register("music_disc.stal");
        MUSIC_DISC_STRAD = register("music_disc.strad");
        MUSIC_DISC_WAIT = register("music_disc.wait");
        MUSIC_DISC_WARD = register("music_disc.ward");
        MUSIC_DRAGON = register("music.dragon");
        MUSIC_END = register("music.end");
        MUSIC_GAME = register("music.game");
        MUSIC_MENU = register("music.menu");
        MUSIC_BIOME_BASALT_DELTAS = register("music.nether.basalt_deltas");
        MUSIC_BIOME_NETHER_WASTES = register("music.nether.nether_wastes");
        MUSIC_BIOME_SOUL_SAND_VALLEY = register("music.nether.soul_sand_valley");
        MUSIC_BIOME_CRIMSON_FOREST = register("music.nether.crimson_forest");
        MUSIC_BIOME_WARPED_FOREST = register("music.nether.warped_forest");
        MUSIC_UNDER_WATER = register("music.under_water");
        NETHER_BRICKS_BREAK = register("block.nether_bricks.break");
        NETHER_BRICKS_STEP = register("block.nether_bricks.step");
        NETHER_BRICKS_PLACE = register("block.nether_bricks.place");
        NETHER_BRICKS_HIT = register("block.nether_bricks.hit");
        NETHER_BRICKS_FALL = register("block.nether_bricks.fall");
        NETHER_WART_BREAK = register("block.nether_wart.break");
        NETHER_WART_PLANTED = register("item.nether_wart.plant");
        STEM_BREAK = register("block.stem.break");
        STEM_STEP = register("block.stem.step");
        STEM_PLACE = register("block.stem.place");
        STEM_HIT = register("block.stem.hit");
        STEM_FALL = register("block.stem.fall");
        NYLIUM_BREAK = register("block.nylium.break");
        NYLIUM_STEP = register("block.nylium.step");
        NYLIUM_PLACE = register("block.nylium.place");
        NYLIUM_HIT = register("block.nylium.hit");
        NYLIUM_FALL = register("block.nylium.fall");
        NETHER_SPROUTS_BREAK = register("block.nether_sprouts.break");
        NETHER_SPROUTS_STEP = register("block.nether_sprouts.step");
        NETHER_SPROUTS_PLACE = register("block.nether_sprouts.place");
        NETHER_SPROUTS_HIT = register("block.nether_sprouts.hit");
        NETHER_SPROUTS_FALL = register("block.nether_sprouts.fall");
        FUNGUS_BREAK = register("block.fungus.break");
        FUNGUS_STEP = register("block.fungus.step");
        FUNGUS_PLACE = register("block.fungus.place");
        FUNGUS_HIT = register("block.fungus.hit");
        FUNGUS_FALL = register("block.fungus.fall");
        WEEPING_VINES_BREAK = register("block.weeping_vines.break");
        WEEPING_VINES_STEP = register("block.weeping_vines.step");
        WEEPING_VINES_PLACE = register("block.weeping_vines.place");
        WEEPING_VINES_HIT = register("block.weeping_vines.hit");
        WEEPING_VINES_FALL = register("block.weeping_vines.fall");
        WART_BLOCK_BREAK = register("block.wart_block.break");
        WART_BLOCK_STEP = register("block.wart_block.step");
        WART_BLOCK_PLACE = register("block.wart_block.place");
        WART_BLOCK_HIT = register("block.wart_block.hit");
        WART_BLOCK_FALL = register("block.wart_block.fall");
        NETHERITE_BLOCK_BREAK = register("block.netherite_block.break");
        NETHERITE_BLOCK_STEP = register("block.netherite_block.step");
        NETHERITE_BLOCK_PLACE = register("block.netherite_block.place");
        NETHERITE_BLOCK_HIT = register("block.netherite_block.hit");
        NETHERITE_BLOCK_FALL = register("block.netherite_block.fall");
        NETHERRACK_BREAK = register("block.netherrack.break");
        NETHERRACK_STEP = register("block.netherrack.step");
        NETHERRACK_PLACE = register("block.netherrack.place");
        NETHERRACK_HIT = register("block.netherrack.hit");
        NETHERRACK_FALL = register("block.netherrack.fall");
        NOTE_BLOCK_BASEDRUM = register("block.note_block.basedrum");
        NOTE_BLOCK_BASS = register("block.note_block.bass");
        NOTE_BLOCK_BELL = register("block.note_block.bell");
        NOTE_BLOCK_CHIME = register("block.note_block.chime");
        NOTE_BLOCK_FLUTE = register("block.note_block.flute");
        NOTE_BLOCK_GUITAR = register("block.note_block.guitar");
        NOTE_BLOCK_HARP = register("block.note_block.harp");
        NOTE_BLOCK_HAT = register("block.note_block.hat");
        NOTE_BLOCK_PLING = register("block.note_block.pling");
        NOTE_BLOCK_SNARE = register("block.note_block.snare");
        NOTE_BLOCK_XYLOPHONE = register("block.note_block.xylophone");
        NOTE_BLOCK_IRON_XYLOPHONE = register("block.note_block.iron_xylophone");
        NOTE_BLOCK_COW_BELL = register("block.note_block.cow_bell");
        NOTE_BLOCK_DIDGERIDOO = register("block.note_block.didgeridoo");
        NOTE_BLOCK_BIT = register("block.note_block.bit");
        NOTE_BLOCK_BANJO = register("block.note_block.banjo");
        OCELOT_HURT = register("entity.ocelot.hurt");
        OCELOT_AMBIENT = register("entity.ocelot.ambient");
        OCELOT_DEATH = register("entity.ocelot.death");
        PAINTING_BREAK = register("entity.painting.break");
        PAINTING_PLACE = register("entity.painting.place");
        PANDA_PRE_SNEEZE = register("entity.panda.pre_sneeze");
        PANDA_SNEEZE = register("entity.panda.sneeze");
        PANDA_AMBIENT = register("entity.panda.ambient");
        PANDA_DEATH = register("entity.panda.death");
        PANDA_EAT = register("entity.panda.eat");
        PANDA_STEP = register("entity.panda.step");
        PANDA_CANT_BREED = register("entity.panda.cant_breed");
        PANDA_AGGRESSIVE_AMBIENT = register("entity.panda.aggressive_ambient");
        PANDA_WORRIED_AMBIENT = register("entity.panda.worried_ambient");
        PANDA_HURT = register("entity.panda.hurt");
        PANDA_BITE = register("entity.panda.bite");
        PARROT_AMBIENT = register("entity.parrot.ambient");
        PARROT_DEATH = register("entity.parrot.death");
        PARROT_EAT = register("entity.parrot.eat");
        PARROT_FLY = register("entity.parrot.fly");
        PARROT_HURT = register("entity.parrot.hurt");
        PARROT_IMITATE_BLAZE = register("entity.parrot.imitate.blaze");
        PARROT_IMITATE_CREEPER = register("entity.parrot.imitate.creeper");
        PARROT_IMITATE_DROWNED = register("entity.parrot.imitate.drowned");
        PARROT_IMITATE_ELDER_GUARDIAN = register("entity.parrot.imitate.elder_guardian");
        PARROT_IMITATE_ENDER_DRAGON = register("entity.parrot.imitate.ender_dragon");
        PARROT_IMITATE_ENDERMITE = register("entity.parrot.imitate.endermite");
        PARROT_IMITATE_EVOKER = register("entity.parrot.imitate.evoker");
        PARROT_IMITATE_GHAST = register("entity.parrot.imitate.ghast");
        PARROT_IMITATE_GUARDIAN = register("entity.parrot.imitate.guardian");
        PARROT_IMITATE_HOGLIN = register("entity.parrot.imitate.hoglin");
        PARROT_IMITATE_HUSK = register("entity.parrot.imitate.husk");
        PARROT_IMITATE_ILLUSIONER = register("entity.parrot.imitate.illusioner");
        PARROT_IMITATE_MAGMA_CUBE = register("entity.parrot.imitate.magma_cube");
        PARROT_IMITATE_PHANTOM = register("entity.parrot.imitate.phantom");
        PARROT_IMITATE_PIGLIN = register("entity.parrot.imitate.piglin");
        PARROT_IMITATE_PIGLIN_BRUTE = register("entity.parrot.imitate.piglin_brute");
        PARROT_IMITATE_PILLAGER = register("entity.parrot.imitate.pillager");
        PARROT_IMITATE_RAVAGER = register("entity.parrot.imitate.ravager");
        PARROT_IMITATE_SHULKER = register("entity.parrot.imitate.shulker");
        PARROT_IMITATE_SILVERFISH = register("entity.parrot.imitate.silverfish");
        PARROT_IMITATE_SKELETON = register("entity.parrot.imitate.skeleton");
        PARROT_IMITATE_SLIME = register("entity.parrot.imitate.slime");
        PARROT_IMITATE_SPIDER = register("entity.parrot.imitate.spider");
        PARROT_IMITATE_STRAY = register("entity.parrot.imitate.stray");
        PARROT_IMITATE_VEX = register("entity.parrot.imitate.vex");
        PARROT_IMITATE_VINDICATOR = register("entity.parrot.imitate.vindicator");
        PARROT_IMITATE_WITCH = register("entity.parrot.imitate.witch");
        PARROT_IMITATE_WITHER = register("entity.parrot.imitate.wither");
        PARROT_IMITATE_WITHER_SKELETON = register("entity.parrot.imitate.wither_skeleton");
        PARROT_IMITATE_ZOGLIN = register("entity.parrot.imitate.zoglin");
        PARROT_IMITATE_ZOMBIE = register("entity.parrot.imitate.zombie");
        PARROT_IMITATE_ZOMBIE_VILLAGER = register("entity.parrot.imitate.zombie_villager");
        PARROT_STEP = register("entity.parrot.step");
        PHANTOM_AMBIENT = register("entity.phantom.ambient");
        PHANTOM_BITE = register("entity.phantom.bite");
        PHANTOM_DEATH = register("entity.phantom.death");
        PHANTOM_FLAP = register("entity.phantom.flap");
        PHANTOM_HURT = register("entity.phantom.hurt");
        PHANTOM_SWOOP = register("entity.phantom.swoop");
        PIG_AMBIENT = register("entity.pig.ambient");
        PIG_DEATH = register("entity.pig.death");
        PIG_HURT = register("entity.pig.hurt");
        PIG_SADDLE = register("entity.pig.saddle");
        PIG_STEP = register("entity.pig.step");
        PIGLIN_ADMIRING_ITEM = register("entity.piglin.admiring_item");
        PIGLIN_AMBIENT = register("entity.piglin.ambient");
        PIGLIN_ANGRY = register("entity.piglin.angry");
        PIGLIN_CELEBRATE = register("entity.piglin.celebrate");
        PIGLIN_DEATH = register("entity.piglin.death");
        PIGLIN_JEALOUS = register("entity.piglin.jealous");
        PIGLIN_HURT = register("entity.piglin.hurt");
        PIGLIN_RETREAT = register("entity.piglin.retreat");
        PIGLIN_STEP = register("entity.piglin.step");
        PIGLIN_CONVERTED_TO_ZOMBIFIED = register("entity.piglin.converted_to_zombified");
        PIGLIN_BRUTE_AMBIENT = register("entity.piglin_brute.ambient");
        PIGLIN_BRUTE_ANGRY = register("entity.piglin_brute.angry");
        PIGLIN_BRUTE_DEATH = register("entity.piglin_brute.death");
        PIGLIN_BRUTE_HURT = register("entity.piglin_brute.hurt");
        PIGLIN_BRUTE_STEP = register("entity.piglin_brute.step");
        PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED = register("entity.piglin_brute.converted_to_zombified");
        PILLAGER_AMBIENT = register("entity.pillager.ambient");
        PILLAGER_CELEBRATE = register("entity.pillager.celebrate");
        PILLAGER_DEATH = register("entity.pillager.death");
        PILLAGER_HURT = register("entity.pillager.hurt");
        PISTON_CONTRACT = register("block.piston.contract");
        PISTON_EXTEND = register("block.piston.extend");
        PLAYER_ATTACK_CRIT = register("entity.player.attack.crit");
        PLAYER_ATTACK_KNOCKBACK = register("entity.player.attack.knockback");
        PLAYER_ATTACK_NODAMAGE = register("entity.player.attack.nodamage");
        PLAYER_ATTACK_STRONG = register("entity.player.attack.strong");
        PLAYER_ATTACK_SWEEP = register("entity.player.attack.sweep");
        PLAYER_ATTACK_WEAK = register("entity.player.attack.weak");
        PLAYER_BIG_FALL = register("entity.player.big_fall");
        PLAYER_BREATH = register("entity.player.breath");
        PLAYER_BURP = register("entity.player.burp");
        PLAYER_DEATH = register("entity.player.death");
        PLAYER_HURT = register("entity.player.hurt");
        PLAYER_HURT_DROWN = register("entity.player.hurt_drown");
        PLAYER_HURT_ON_FIRE = register("entity.player.hurt_on_fire");
        PLAYER_HURT_SWEET_BERRY_BUSH = register("entity.player.hurt_sweet_berry_bush");
        PLAYER_LEVELUP = register("entity.player.levelup");
        PLAYER_SMALL_FALL = register("entity.player.small_fall");
        PLAYER_SPLASH = register("entity.player.splash");
        PLAYER_SPLASH_HIGH_SPEED = register("entity.player.splash.high_speed");
        PLAYER_SWIM = register("entity.player.swim");
        POLAR_BEAR_AMBIENT = register("entity.polar_bear.ambient");
        POLAR_BEAR_AMBIENT_BABY = register("entity.polar_bear.ambient_baby");
        POLAR_BEAR_DEATH = register("entity.polar_bear.death");
        POLAR_BEAR_HURT = register("entity.polar_bear.hurt");
        POLAR_BEAR_STEP = register("entity.polar_bear.step");
        POLAR_BEAR_WARNING = register("entity.polar_bear.warning");
        PORTAL_AMBIENT = register("block.portal.ambient");
        PORTAL_TRAVEL = register("block.portal.travel");
        PORTAL_TRIGGER = register("block.portal.trigger");
        PUFFER_FISH_AMBIENT = register("entity.puffer_fish.ambient");
        PUFFER_FISH_BLOW_OUT = register("entity.puffer_fish.blow_out");
        PUFFER_FISH_BLOW_UP = register("entity.puffer_fish.blow_up");
        PUFFER_FISH_DEATH = register("entity.puffer_fish.death");
        PUFFER_FISH_FLOP = register("entity.puffer_fish.flop");
        PUFFER_FISH_HURT = register("entity.puffer_fish.hurt");
        PUFFER_FISH_STING = register("entity.puffer_fish.sting");
        PUMPKIN_CARVE = register("block.pumpkin.carve");
        RABBIT_AMBIENT = register("entity.rabbit.ambient");
        RABBIT_ATTACK = register("entity.rabbit.attack");
        RABBIT_DEATH = register("entity.rabbit.death");
        RABBIT_HURT = register("entity.rabbit.hurt");
        RABBIT_JUMP = register("entity.rabbit.jump");
        RAID_HORN = register("event.raid.horn");
        RAVAGER_AMBIENT = register("entity.ravager.ambient");
        RAVAGER_ATTACK = register("entity.ravager.attack");
        RAVAGER_CELEBRATE = register("entity.ravager.celebrate");
        RAVAGER_DEATH = register("entity.ravager.death");
        RAVAGER_HURT = register("entity.ravager.hurt");
        RAVAGER_STEP = register("entity.ravager.step");
        RAVAGER_STUNNED = register("entity.ravager.stunned");
        RAVAGER_ROAR = register("entity.ravager.roar");
        NETHER_GOLD_ORE_BREAK = register("block.nether_gold_ore.break");
        NETHER_GOLD_ORE_FALL = register("block.nether_gold_ore.fall");
        NETHER_GOLD_ORE_HIT = register("block.nether_gold_ore.hit");
        NETHER_GOLD_ORE_PLACE = register("block.nether_gold_ore.place");
        NETHER_GOLD_ORE_STEP = register("block.nether_gold_ore.step");
        NETHER_ORE_BREAK = register("block.nether_ore.break");
        NETHER_ORE_FALL = register("block.nether_ore.fall");
        NETHER_ORE_HIT = register("block.nether_ore.hit");
        NETHER_ORE_PLACE = register("block.nether_ore.place");
        NETHER_ORE_STEP = register("block.nether_ore.step");
        REDSTONE_TORCH_BURNOUT = register("block.redstone_torch.burnout");
        RESPAWN_ANCHOR_AMBIENT = register("block.respawn_anchor.ambient");
        RESPAWN_ANCHOR_CHARGE = register("block.respawn_anchor.charge");
        RESPAWN_ANCHOR_DEPLETE = register("block.respawn_anchor.deplete");
        RESPAWN_ANCHOR_SET_SPAWN = register("block.respawn_anchor.set_spawn");
        SALMON_AMBIENT = register("entity.salmon.ambient");
        SALMON_DEATH = register("entity.salmon.death");
        SALMON_FLOP = register("entity.salmon.flop");
        SALMON_HURT = register("entity.salmon.hurt");
        SAND_BREAK = register("block.sand.break");
        SAND_FALL = register("block.sand.fall");
        SAND_HIT = register("block.sand.hit");
        SAND_PLACE = register("block.sand.place");
        SAND_STEP = register("block.sand.step");
        SCAFFOLDING_BREAK = register("block.scaffolding.break");
        SCAFFOLDING_FALL = register("block.scaffolding.fall");
        SCAFFOLDING_HIT = register("block.scaffolding.hit");
        SCAFFOLDING_PLACE = register("block.scaffolding.place");
        SCAFFOLDING_STEP = register("block.scaffolding.step");
        SHEEP_AMBIENT = register("entity.sheep.ambient");
        SHEEP_DEATH = register("entity.sheep.death");
        SHEEP_HURT = register("entity.sheep.hurt");
        SHEEP_SHEAR = register("entity.sheep.shear");
        SHEEP_STEP = register("entity.sheep.step");
        SHIELD_BLOCK = register("item.shield.block");
        SHIELD_BREAK = register("item.shield.break");
        SHROOMLIGHT_BREAK = register("block.shroomlight.break");
        SHROOMLIGHT_STEP = register("block.shroomlight.step");
        SHROOMLIGHT_PLACE = register("block.shroomlight.place");
        SHROOMLIGHT_HIT = register("block.shroomlight.hit");
        SHROOMLIGHT_FALL = register("block.shroomlight.fall");
        SHOVEL_FLATTEN = register("item.shovel.flatten");
        SHULKER_AMBIENT = register("entity.shulker.ambient");
        SHULKER_BOX_CLOSE = register("block.shulker_box.close");
        SHULKER_BOX_OPEN = register("block.shulker_box.open");
        SHULKER_BULLET_HIT = register("entity.shulker_bullet.hit");
        SHULKER_BULLET_HURT = register("entity.shulker_bullet.hurt");
        SHULKER_CLOSE = register("entity.shulker.close");
        SHULKER_DEATH = register("entity.shulker.death");
        SHULKER_HURT = register("entity.shulker.hurt");
        SHULKER_HURT_CLOSED = register("entity.shulker.hurt_closed");
        SHULKER_OPEN = register("entity.shulker.open");
        SHULKER_SHOOT = register("entity.shulker.shoot");
        SHULKER_TELEPORT = register("entity.shulker.teleport");
        SILVERFISH_AMBIENT = register("entity.silverfish.ambient");
        SILVERFISH_DEATH = register("entity.silverfish.death");
        SILVERFISH_HURT = register("entity.silverfish.hurt");
        SILVERFISH_STEP = register("entity.silverfish.step");
        SKELETON_AMBIENT = register("entity.skeleton.ambient");
        SKELETON_DEATH = register("entity.skeleton.death");
        SKELETON_HORSE_AMBIENT = register("entity.skeleton_horse.ambient");
        SKELETON_HORSE_DEATH = register("entity.skeleton_horse.death");
        SKELETON_HORSE_HURT = register("entity.skeleton_horse.hurt");
        SKELETON_HORSE_SWIM = register("entity.skeleton_horse.swim");
        SKELETON_HORSE_AMBIENT_WATER = register("entity.skeleton_horse.ambient_water");
        SKELETON_HORSE_GALLOP_WATER = register("entity.skeleton_horse.gallop_water");
        SKELETON_HORSE_JUMP_WATER = register("entity.skeleton_horse.jump_water");
        SKELETON_HORSE_STEP_WATER = register("entity.skeleton_horse.step_water");
        SKELETON_HURT = register("entity.skeleton.hurt");
        SKELETON_SHOOT = register("entity.skeleton.shoot");
        SKELETON_STEP = register("entity.skeleton.step");
        SLIME_ATTACK = register("entity.slime.attack");
        SLIME_DEATH = register("entity.slime.death");
        SLIME_HURT = register("entity.slime.hurt");
        SLIME_JUMP = register("entity.slime.jump");
        SLIME_SQUISH = register("entity.slime.squish");
        SLIME_BLOCK_BREAK = register("block.slime_block.break");
        SLIME_BLOCK_FALL = register("block.slime_block.fall");
        SLIME_BLOCK_HIT = register("block.slime_block.hit");
        SLIME_BLOCK_PLACE = register("block.slime_block.place");
        SLIME_BLOCK_STEP = register("block.slime_block.step");
        SOUL_SAND_BREAK = register("block.soul_sand.break");
        SOUL_SAND_STEP = register("block.soul_sand.step");
        SOUL_SAND_PLACE = register("block.soul_sand.place");
        SOUL_SAND_HIT = register("block.soul_sand.hit");
        SOUL_SAND_FALL = register("block.soul_sand.fall");
        SOUL_SOIL_BREAK = register("block.soul_soil.break");
        SOUL_SOIL_STEP = register("block.soul_soil.step");
        SOUL_SOIL_PLACE = register("block.soul_soil.place");
        SOUL_SOIL_HIT = register("block.soul_soil.hit");
        SOUL_SOIL_FALL = register("block.soul_soil.fall");
        SOUL_ESCAPE = register("particle.soul_escape");
        STRIDER_AMBIENT = register("entity.strider.ambient");
        STRIDER_HAPPY = register("entity.strider.happy");
        STRIDER_RETREAT = register("entity.strider.retreat");
        STRIDER_DEATH = register("entity.strider.death");
        STRIDER_HURT = register("entity.strider.hurt");
        STRIDER_STEP = register("entity.strider.step");
        STRIDER_STEP_LAVA = register("entity.strider.step_lava");
        STRIDER_EAT = register("entity.strider.eat");
        STRIDER_SADDLE = register("entity.strider.saddle");
        SLIME_DEATH_SMALL = register("entity.slime.death_small");
        SLIME_HURT_SMALL = register("entity.slime.hurt_small");
        SLIME_JUMP_SMALL = register("entity.slime.jump_small");
        SLIME_SQUISH_SMALL = register("entity.slime.squish_small");
        SMITHING_TABLE_USE = register("block.smithing_table.use");
        SMOKER_SMOKE = register("block.smoker.smoke");
        SNOWBALL_THROW = register("entity.snowball.throw");
        SNOW_BREAK = register("block.snow.break");
        SNOW_FALL = register("block.snow.fall");
        SNOW_GOLEM_AMBIENT = register("entity.snow_golem.ambient");
        SNOW_GOLEM_DEATH = register("entity.snow_golem.death");
        SNOW_GOLEM_HURT = register("entity.snow_golem.hurt");
        SNOW_GOLEM_SHOOT = register("entity.snow_golem.shoot");
        SNOW_GOLEM_SHEAR = register("entity.snow_golem.shear");
        SNOW_HIT = register("block.snow.hit");
        SNOW_PLACE = register("block.snow.place");
        SNOW_STEP = register("block.snow.step");
        SPIDER_AMBIENT = register("entity.spider.ambient");
        SPIDER_DEATH = register("entity.spider.death");
        SPIDER_HURT = register("entity.spider.hurt");
        SPIDER_STEP = register("entity.spider.step");
        SPLASH_POTION_BREAK = register("entity.splash_potion.break");
        SPLASH_POTION_THROW = register("entity.splash_potion.throw");
        SQUID_AMBIENT = register("entity.squid.ambient");
        SQUID_DEATH = register("entity.squid.death");
        SQUID_HURT = register("entity.squid.hurt");
        SQUID_SQUIRT = register("entity.squid.squirt");
        STONE_BREAK = register("block.stone.break");
        STONE_BUTTON_CLICK_OFF = register("block.stone_button.click_off");
        STONE_BUTTON_CLICK_ON = register("block.stone_button.click_on");
        STONE_FALL = register("block.stone.fall");
        STONE_HIT = register("block.stone.hit");
        STONE_PLACE = register("block.stone.place");
        STONE_PRESSURE_PLATE_CLICK_OFF = register("block.stone_pressure_plate.click_off");
        STONE_PRESSURE_PLATE_CLICK_ON = register("block.stone_pressure_plate.click_on");
        STONE_STEP = register("block.stone.step");
        STRAY_AMBIENT = register("entity.stray.ambient");
        STRAY_DEATH = register("entity.stray.death");
        STRAY_HURT = register("entity.stray.hurt");
        STRAY_STEP = register("entity.stray.step");
        SWEET_BERRY_BUSH_BREAK = register("block.sweet_berry_bush.break");
        SWEET_BERRY_BUSH_PLACE = register("block.sweet_berry_bush.place");
        SWEET_BERRY_BUSH_PICK_BERRIES = register("item.sweet_berries.pick_from_bush");
        THORNS_HIT = register("enchant.thorns.hit");
        TNT_PRIMED = register("entity.tnt.primed");
        TOTEM_USE = register("item.totem.use");
        TRIDENT_HIT = register("item.trident.hit");
        TRIDENT_HIT_GROUND = register("item.trident.hit_ground");
        TRIDENT_RETURN = register("item.trident.return");
        TRIDENT_RIPTIDE_1 = register("item.trident.riptide_1");
        TRIDENT_RIPTIDE_2 = register("item.trident.riptide_2");
        TRIDENT_RIPTIDE_3 = register("item.trident.riptide_3");
        TRIDENT_THROW = register("item.trident.throw");
        TRIDENT_THUNDER = register("item.trident.thunder");
        TRIPWIRE_ATTACH = register("block.tripwire.attach");
        TRIPWIRE_CLICK_OFF = register("block.tripwire.click_off");
        TRIPWIRE_CLICK_ON = register("block.tripwire.click_on");
        TRIPWIRE_DETACH = register("block.tripwire.detach");
        TROPICAL_FISH_AMBIENT = register("entity.tropical_fish.ambient");
        TROPICAL_FISH_DEATH = register("entity.tropical_fish.death");
        TROPICAL_FISH_FLOP = register("entity.tropical_fish.flop");
        TROPICAL_FISH_HURT = register("entity.tropical_fish.hurt");
        TURTLE_AMBIENT_LAND = register("entity.turtle.ambient_land");
        TURTLE_DEATH = register("entity.turtle.death");
        TURTLE_DEATH_BABY = register("entity.turtle.death_baby");
        TURTLE_EGG_BREAK = register("entity.turtle.egg_break");
        TURTLE_EGG_CRACK = register("entity.turtle.egg_crack");
        TURTLE_EGG_HATCH = register("entity.turtle.egg_hatch");
        TURTLE_HURT = register("entity.turtle.hurt");
        TURTLE_HURT_BABY = register("entity.turtle.hurt_baby");
        TURTLE_LAY_EGG = register("entity.turtle.lay_egg");
        TURTLE_SHAMBLE = register("entity.turtle.shamble");
        TURTLE_SHAMBLE_BABY = register("entity.turtle.shamble_baby");
        TURTLE_SWIM = register("entity.turtle.swim");
        UI_BUTTON_CLICK = register("ui.button.click");
        UI_LOOM_SELECT_PATTERN = register("ui.loom.select_pattern");
        UI_LOOM_TAKE_RESULT = register("ui.loom.take_result");
        UI_CARTOGRAPHY_TABLE_TAKE_RESULT = register("ui.cartography_table.take_result");
        UI_STONECUTTER_TAKE_RESULT = register("ui.stonecutter.take_result");
        UI_STONECUTTER_SELECT_RECIPE = register("ui.stonecutter.select_recipe");
        UI_TOAST_CHALLENGE_COMPLETE = register("ui.toast.challenge_complete");
        UI_TOAST_IN = register("ui.toast.in");
        UI_TOAST_OUT = register("ui.toast.out");
        VEX_AMBIENT = register("entity.vex.ambient");
        VEX_CHARGE = register("entity.vex.charge");
        VEX_DEATH = register("entity.vex.death");
        VEX_HURT = register("entity.vex.hurt");
        VILLAGER_AMBIENT = register("entity.villager.ambient");
        VILLAGER_CELEBRATE = register("entity.villager.celebrate");
        VILLAGER_DEATH = register("entity.villager.death");
        VILLAGER_HURT = register("entity.villager.hurt");
        VILLAGER_NO = register("entity.villager.no");
        VILLAGER_TRADE = register("entity.villager.trade");
        VILLAGER_YES = register("entity.villager.yes");
        VILLAGER_WORK_ARMORER = register("entity.villager.work_armorer");
        VILLAGER_WORK_BUTCHER = register("entity.villager.work_butcher");
        VILLAGER_WORK_CARTOGRAPHER = register("entity.villager.work_cartographer");
        VILLAGER_WORK_CLERIC = register("entity.villager.work_cleric");
        VILLAGER_WORK_FARMER = register("entity.villager.work_farmer");
        VILLAGER_WORK_FISHERMAN = register("entity.villager.work_fisherman");
        VILLAGER_WORK_FLETCHER = register("entity.villager.work_fletcher");
        VILLAGER_WORK_LEATHERWORKER = register("entity.villager.work_leatherworker");
        VILLAGER_WORK_LIBRARIAN = register("entity.villager.work_librarian");
        VILLAGER_WORK_MASON = register("entity.villager.work_mason");
        VILLAGER_WORK_SHEPHERD = register("entity.villager.work_shepherd");
        VILLAGER_WORK_TOOLSMITH = register("entity.villager.work_toolsmith");
        VILLAGER_WORK_WEAPONSMITH = register("entity.villager.work_weaponsmith");
        VINDICATOR_AMBIENT = register("entity.vindicator.ambient");
        VINDICATOR_CELEBRATE = register("entity.vindicator.celebrate");
        VINDICATOR_DEATH = register("entity.vindicator.death");
        VINDICATOR_HURT = register("entity.vindicator.hurt");
        VINE_STEP = register("block.vine.step");
        LILY_PAD_PLACE = register("block.lily_pad.place");
        WANDERING_TRADER_AMBIENT = register("entity.wandering_trader.ambient");
        WANDERING_TRADER_DEATH = register("entity.wandering_trader.death");
        WANDERING_TRADER_DISAPPEARED = register("entity.wandering_trader.disappeared");
        WANDERING_TRADER_DRINK_MILK = register("entity.wandering_trader.drink_milk");
        WANDERING_TRADER_DRINK_POTION = register("entity.wandering_trader.drink_potion");
        WANDERING_TRADER_HURT = register("entity.wandering_trader.hurt");
        WANDERING_TRADER_NO = register("entity.wandering_trader.no");
        WANDERING_TRADER_REAPPEARED = register("entity.wandering_trader.reappeared");
        WANDERING_TRADER_TRADE = register("entity.wandering_trader.trade");
        WANDERING_TRADER_YES = register("entity.wandering_trader.yes");
        WATER_AMBIENT = register("block.water.ambient");
        WEATHER_RAIN = register("weather.rain");
        WEATHER_RAIN_ABOVE = register("weather.rain.above");
        WET_GRASS_BREAK = register("block.wet_grass.break");
        WET_GRASS_FALL = register("block.wet_grass.fall");
        WET_GRASS_HIT = register("block.wet_grass.hit");
        WET_GRASS_PLACE = register("block.wet_grass.place");
        WET_GRASS_STEP = register("block.wet_grass.step");
        WITCH_AMBIENT = register("entity.witch.ambient");
        WITCH_CELEBRATE = register("entity.witch.celebrate");
        WITCH_DEATH = register("entity.witch.death");
        WITCH_DRINK = register("entity.witch.drink");
        WITCH_HURT = register("entity.witch.hurt");
        WITCH_THROW = register("entity.witch.throw");
        WITHER_AMBIENT = register("entity.wither.ambient");
        WITHER_BREAK_BLOCK = register("entity.wither.break_block");
        WITHER_DEATH = register("entity.wither.death");
        WITHER_HURT = register("entity.wither.hurt");
        WITHER_SHOOT = register("entity.wither.shoot");
        WITHER_SKELETON_AMBIENT = register("entity.wither_skeleton.ambient");
        WITHER_SKELETON_DEATH = register("entity.wither_skeleton.death");
        WITHER_SKELETON_HURT = register("entity.wither_skeleton.hurt");
        WITHER_SKELETON_STEP = register("entity.wither_skeleton.step");
        WITHER_SPAWN = register("entity.wither.spawn");
        WOLF_AMBIENT = register("entity.wolf.ambient");
        WOLF_DEATH = register("entity.wolf.death");
        WOLF_GROWL = register("entity.wolf.growl");
        WOLF_HOWL = register("entity.wolf.howl");
        WOLF_HURT = register("entity.wolf.hurt");
        WOLF_PANT = register("entity.wolf.pant");
        WOLF_SHAKE = register("entity.wolf.shake");
        WOLF_STEP = register("entity.wolf.step");
        WOLF_WHINE = register("entity.wolf.whine");
        WOODEN_DOOR_CLOSE = register("block.wooden_door.close");
        WOODEN_DOOR_OPEN = register("block.wooden_door.open");
        WOODEN_TRAPDOOR_CLOSE = register("block.wooden_trapdoor.close");
        WOODEN_TRAPDOOR_OPEN = register("block.wooden_trapdoor.open");
        WOOD_BREAK = register("block.wood.break");
        WOODEN_BUTTON_CLICK_OFF = register("block.wooden_button.click_off");
        WOODEN_BUTTON_CLICK_ON = register("block.wooden_button.click_on");
        WOOD_FALL = register("block.wood.fall");
        WOOD_HIT = register("block.wood.hit");
        WOOD_PLACE = register("block.wood.place");
        WOODEN_PRESSURE_PLATE_CLICK_OFF = register("block.wooden_pressure_plate.click_off");
        WOODEN_PRESSURE_PLATE_CLICK_ON = register("block.wooden_pressure_plate.click_on");
        WOOD_STEP = register("block.wood.step");
        WOOL_BREAK = register("block.wool.break");
        WOOL_FALL = register("block.wool.fall");
        WOOL_HIT = register("block.wool.hit");
        WOOL_PLACE = register("block.wool.place");
        WOOL_STEP = register("block.wool.step");
        ZOGLIN_AMBIENT = register("entity.zoglin.ambient");
        ZOGLIN_ANGRY = register("entity.zoglin.angry");
        ZOGLIN_ATTACK = register("entity.zoglin.attack");
        ZOGLIN_DEATH = register("entity.zoglin.death");
        ZOGLIN_HURT = register("entity.zoglin.hurt");
        ZOGLIN_STEP = register("entity.zoglin.step");
        ZOMBIE_AMBIENT = register("entity.zombie.ambient");
        ZOMBIE_ATTACK_WOODEN_DOOR = register("entity.zombie.attack_wooden_door");
        ZOMBIE_ATTACK_IRON_DOOR = register("entity.zombie.attack_iron_door");
        ZOMBIE_BREAK_WOODEN_DOOR = register("entity.zombie.break_wooden_door");
        ZOMBIE_CONVERTED_TO_DROWNED = register("entity.zombie.converted_to_drowned");
        ZOMBIE_DEATH = register("entity.zombie.death");
        ZOMBIE_DESTROY_EGG = register("entity.zombie.destroy_egg");
        ZOMBIE_HORSE_AMBIENT = register("entity.zombie_horse.ambient");
        ZOMBIE_HORSE_DEATH = register("entity.zombie_horse.death");
        ZOMBIE_HORSE_HURT = register("entity.zombie_horse.hurt");
        ZOMBIE_HURT = register("entity.zombie.hurt");
        ZOMBIE_INFECT = register("entity.zombie.infect");
        ZOMBIFIED_PIGLIN_AMBIENT = register("entity.zombified_piglin.ambient");
        ZOMBIFIED_PIGLIN_ANGRY = register("entity.zombified_piglin.angry");
        ZOMBIFIED_PIGLIN_DEATH = register("entity.zombified_piglin.death");
        ZOMBIFIED_PIGLIN_HURT = register("entity.zombified_piglin.hurt");
        ZOMBIE_STEP = register("entity.zombie.step");
        ZOMBIE_VILLAGER_AMBIENT = register("entity.zombie_villager.ambient");
        ZOMBIE_VILLAGER_CONVERTED = register("entity.zombie_villager.converted");
        ZOMBIE_VILLAGER_CURE = register("entity.zombie_villager.cure");
        ZOMBIE_VILLAGER_DEATH = register("entity.zombie_villager.death");
        ZOMBIE_VILLAGER_HURT = register("entity.zombie_villager.hurt");
        ZOMBIE_VILLAGER_STEP = register("entity.zombie_villager.step");
    }
}
